/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import Conexion.ConexionSQL;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.ss.usermodel.PaperSize;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author JDeat
 */
public final class Admin_Listas_5 extends javax.swing.JFrame {

    /**
     * Creates new form Listas
     */
    String FG = "";
    ConexionSQL cc = new ConexionSQL();
    Connection con = cc.conexion();

    public Admin_Listas_5() {
        initComponents();
        SHempleados();
        // <editor-fold defaultstate="collapsed" desc="Campos invisibles">
        Fecha2.setVisible(false);
        Fecha3.setVisible(false);
        Fecha4.setVisible(false);
        Fecha5.setVisible(false);
        Fecha6.setVisible(false);
        Fecha7.setVisible(false);
        Fecha8.setVisible(false);
        Fecha9.setVisible(false);
        Fecha10.setVisible(false);
        Fecha11.setVisible(false);
        Fecha12.setVisible(false);
        Fecha13.setVisible(false);
        Fecha14.setVisible(false);
        Fecha15.setVisible(false);
        Fecha16.setVisible(false);
        LabelFil.setVisible(false);
        LDAfilap.setVisible(false);
        LDAfilam.setVisible(false);
        LDAfilname.setVisible(false);
        /*DiaCor1.setVisible(false);
        DiaCor2.setVisible(false);
        DiaCor3.setVisible(false);
        DiaCor4.setVisible(false);
        DiaCor5.setVisible(false);
        DiaCor6.setVisible(false);
        DiaCor7.setVisible(false);
        DiaCor8.setVisible(false);
        DiaCor9.setVisible(false);
        DiaCor10.setVisible(false);
        DiaCor11.setVisible(false);
        DiaCor12.setVisible(false);
        DiaCor13.setVisible(false);
        DiaCor14.setVisible(false);
        DiaCor15.setVisible(false);
        DiaCor16.setVisible(false);

        DiaCom1.setVisible(false);
        DiaCom2.setVisible(false);
        DiaCom3.setVisible(false);
        DiaCom4.setVisible(false);
        DiaCom5.setVisible(false);
        DiaCom6.setVisible(false);
        DiaCom7.setVisible(false);
        DiaCom8.setVisible(false);
        DiaCom9.setVisible(false);
        DiaCom10.setVisible(false);
        DiaCom11.setVisible(false);
        DiaCom12.setVisible(false);
        DiaCom13.setVisible(false);
        DiaCom14.setVisible(false);
        DiaCom15.setVisible(false);
        DiaCom16.setVisible(false); */
// </editor-fold>
        this.setLocationRelativeTo(null);
        this.setExtendedState(6);
        setIconImage(new ImageIcon(Admin_Listas_5.class.getClassLoader().getResource("Imagenes/Icono.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        LDAQuin = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Fecha1 = new com.toedter.calendar.JDateChooser();
        Fecha2 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Fecha3 = new com.toedter.calendar.JDateChooser();
        Fecha4 = new com.toedter.calendar.JDateChooser();
        Fecha5 = new com.toedter.calendar.JDateChooser();
        Fecha6 = new com.toedter.calendar.JDateChooser();
        Fecha7 = new com.toedter.calendar.JDateChooser();
        Fecha8 = new com.toedter.calendar.JDateChooser();
        Fecha9 = new com.toedter.calendar.JDateChooser();
        Fecha10 = new com.toedter.calendar.JDateChooser();
        Fecha11 = new com.toedter.calendar.JDateChooser();
        Fecha12 = new com.toedter.calendar.JDateChooser();
        Fecha13 = new com.toedter.calendar.JDateChooser();
        Fecha14 = new com.toedter.calendar.JDateChooser();
        Fecha15 = new com.toedter.calendar.JDateChooser();
        Fecha16 = new com.toedter.calendar.JDateChooser();
        LDAAp = new javax.swing.JTextField();
        LDAAm = new javax.swing.JTextField();
        LDAName = new javax.swing.JTextField();
        LDA = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        CI = new javax.swing.JCheckBox();
        MTL = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        EmpleadosSh = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        LDAfil = new javax.swing.JComboBox<>();
        LabelFil = new javax.swing.JLabel();
        LDAfilname = new javax.swing.JTextField();
        LDAfilap = new javax.swing.JTextField();
        LDAfilam = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        LDAZon = new javax.swing.JTextField();
        Agregar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        ULDA = new javax.swing.JLabel();
        NYear = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        FillLCI = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        FillLCIAp = new javax.swing.JTextField();
        FillLCIAm = new javax.swing.JTextField();
        FillLCIName = new javax.swing.JTextField();
        FillLCIQuin = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        TableLDACI = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        FillLCI1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        FillLCIAp1 = new javax.swing.JTextField();
        FillLCIAm1 = new javax.swing.JTextField();
        FillLCIName1 = new javax.swing.JTextField();
        FillLCIQuin1 = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        TableLDACI1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        FillLCI2 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        FillLCIAp2 = new javax.swing.JTextField();
        FillLCIAm2 = new javax.swing.JTextField();
        FillLCIName2 = new javax.swing.JTextField();
        FillLCIQuin2 = new javax.swing.JComboBox<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        TableLDACI2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        FillLCI3 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        FillLCIAp3 = new javax.swing.JTextField();
        FillLCIAm3 = new javax.swing.JTextField();
        FillLCIName3 = new javax.swing.JTextField();
        FillLCIQuin3 = new javax.swing.JComboBox<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        TableLDACI3 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        FillLCI4 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        FillLCIAp4 = new javax.swing.JTextField();
        FillLCIAm4 = new javax.swing.JTextField();
        FillLCIName4 = new javax.swing.JTextField();
        FillLCIQuin4 = new javax.swing.JComboBox<>();
        jScrollPane15 = new javax.swing.JScrollPane();
        TableLDACI4 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        FillLCI5 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        FillLCIAp5 = new javax.swing.JTextField();
        FillLCIAm5 = new javax.swing.JTextField();
        FillLCIName5 = new javax.swing.JTextField();
        FillLCIQuin5 = new javax.swing.JComboBox<>();
        jScrollPane17 = new javax.swing.JScrollPane();
        TableLDACI5 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        FillLCI6 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        FillLCIAp6 = new javax.swing.JTextField();
        FillLCIAm6 = new javax.swing.JTextField();
        FillLCIName6 = new javax.swing.JTextField();
        FillLCIQuin6 = new javax.swing.JComboBox<>();
        jScrollPane19 = new javax.swing.JScrollPane();
        TableLDACI6 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jScrollPane20 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        FillLCI7 = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        FillLCIAp7 = new javax.swing.JTextField();
        FillLCIAm7 = new javax.swing.JTextField();
        FillLCIName7 = new javax.swing.JTextField();
        FillLCIQuin7 = new javax.swing.JComboBox<>();
        jScrollPane21 = new javax.swing.JScrollPane();
        TableLDACI7 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jScrollPane22 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        FillLCI8 = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        FillLCIAp8 = new javax.swing.JTextField();
        FillLCIAm8 = new javax.swing.JTextField();
        FillLCIName8 = new javax.swing.JTextField();
        FillLCIQuin8 = new javax.swing.JComboBox<>();
        jScrollPane23 = new javax.swing.JScrollPane();
        TableLDACI8 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        FillLCI9 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        FillLCIAp9 = new javax.swing.JTextField();
        FillLCIAm9 = new javax.swing.JTextField();
        FillLCIName9 = new javax.swing.JTextField();
        FillLCIQuin9 = new javax.swing.JComboBox<>();
        jScrollPane25 = new javax.swing.JScrollPane();
        TableLDACI9 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane26 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        FillLSI = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        FillLSIAp = new javax.swing.JTextField();
        FillLSIAm = new javax.swing.JTextField();
        FillLSIName = new javax.swing.JTextField();
        FillLSIQuin = new javax.swing.JComboBox<>();
        jScrollPane27 = new javax.swing.JScrollPane();
        TableLDASI = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jScrollPane28 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        FillLSI1 = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        FillLSIAp1 = new javax.swing.JTextField();
        FillLSIAm1 = new javax.swing.JTextField();
        FillLSIName1 = new javax.swing.JTextField();
        FillLSIQuin1 = new javax.swing.JComboBox<>();
        jScrollPane29 = new javax.swing.JScrollPane();
        TableLDASI1 = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jScrollPane30 = new javax.swing.JScrollPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        FillLSI2 = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        FillLSIAp2 = new javax.swing.JTextField();
        FillLSIAm2 = new javax.swing.JTextField();
        FillLSIName2 = new javax.swing.JTextField();
        FillLSIQuin2 = new javax.swing.JComboBox<>();
        jScrollPane31 = new javax.swing.JScrollPane();
        TableLDASI2 = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jScrollPane32 = new javax.swing.JScrollPane();
        jPanel15 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        FillLSI3 = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        FillLSIAp3 = new javax.swing.JTextField();
        FillLSIAm3 = new javax.swing.JTextField();
        FillLSIName3 = new javax.swing.JTextField();
        FillLSIQuin3 = new javax.swing.JComboBox<>();
        jScrollPane33 = new javax.swing.JScrollPane();
        TableLDASI3 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jScrollPane34 = new javax.swing.JScrollPane();
        jPanel16 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        FillLSI4 = new javax.swing.JComboBox<>();
        jLabel40 = new javax.swing.JLabel();
        FillLSIAp4 = new javax.swing.JTextField();
        FillLSIAm4 = new javax.swing.JTextField();
        FillLSIName4 = new javax.swing.JTextField();
        FillLSIQuin4 = new javax.swing.JComboBox<>();
        jScrollPane35 = new javax.swing.JScrollPane();
        TableLDASI4 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jScrollPane36 = new javax.swing.JScrollPane();
        jPanel17 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        FillLSI5 = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        FillLSIAp5 = new javax.swing.JTextField();
        FillLSIAm5 = new javax.swing.JTextField();
        FillLSIName5 = new javax.swing.JTextField();
        FillLSIQuin5 = new javax.swing.JComboBox<>();
        jScrollPane37 = new javax.swing.JScrollPane();
        TableLDASI5 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jScrollPane38 = new javax.swing.JScrollPane();
        jPanel18 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        FillLSI6 = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        FillLSIAp6 = new javax.swing.JTextField();
        FillLSIAm6 = new javax.swing.JTextField();
        FillLSIName6 = new javax.swing.JTextField();
        FillLSIQuin6 = new javax.swing.JComboBox<>();
        jScrollPane39 = new javax.swing.JScrollPane();
        TableLDASI6 = new javax.swing.JTable();
        jButton18 = new javax.swing.JButton();
        jScrollPane40 = new javax.swing.JScrollPane();
        jPanel19 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        FillLSI7 = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        FillLSIAp7 = new javax.swing.JTextField();
        FillLSIAm7 = new javax.swing.JTextField();
        FillLSIName7 = new javax.swing.JTextField();
        FillLSIQuin7 = new javax.swing.JComboBox<>();
        jScrollPane41 = new javax.swing.JScrollPane();
        TableLDASI7 = new javax.swing.JTable();
        jButton19 = new javax.swing.JButton();
        jScrollPane42 = new javax.swing.JScrollPane();
        jPanel20 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        FillLSI8 = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        FillLSIAp8 = new javax.swing.JTextField();
        FillLSIAm8 = new javax.swing.JTextField();
        FillLSIName8 = new javax.swing.JTextField();
        FillLSIQuin8 = new javax.swing.JComboBox<>();
        jScrollPane43 = new javax.swing.JScrollPane();
        TableLDASI8 = new javax.swing.JTable();
        jButton20 = new javax.swing.JButton();
        jScrollPane44 = new javax.swing.JScrollPane();
        jPanel21 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        FillLSI9 = new javax.swing.JComboBox<>();
        jLabel50 = new javax.swing.JLabel();
        FillLSIAp9 = new javax.swing.JTextField();
        FillLSIAm9 = new javax.swing.JTextField();
        FillLSIName9 = new javax.swing.JTextField();
        FillLSIQuin9 = new javax.swing.JComboBox<>();
        jScrollPane45 = new javax.swing.JScrollPane();
        TableLDASI9 = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        DiaCor1 = new com.toedter.calendar.JDateChooser();
        DiaCor2 = new com.toedter.calendar.JDateChooser();
        DiaCor3 = new com.toedter.calendar.JDateChooser();
        DiaCor4 = new com.toedter.calendar.JDateChooser();
        DiaCor5 = new com.toedter.calendar.JDateChooser();
        DiaCor6 = new com.toedter.calendar.JDateChooser();
        DiaCor7 = new com.toedter.calendar.JDateChooser();
        DiaCor8 = new com.toedter.calendar.JDateChooser();
        DiaCor9 = new com.toedter.calendar.JDateChooser();
        DiaCor10 = new com.toedter.calendar.JDateChooser();
        DiaCor11 = new com.toedter.calendar.JDateChooser();
        DiaCor12 = new com.toedter.calendar.JDateChooser();
        DiaCor13 = new com.toedter.calendar.JDateChooser();
        DiaCor14 = new com.toedter.calendar.JDateChooser();
        DiaCor15 = new com.toedter.calendar.JDateChooser();
        DiaCor16 = new com.toedter.calendar.JDateChooser();
        DiaCom1 = new com.toedter.calendar.JDateChooser();
        DiaCom2 = new com.toedter.calendar.JDateChooser();
        DiaCom3 = new com.toedter.calendar.JDateChooser();
        DiaCom4 = new com.toedter.calendar.JDateChooser();
        DiaCom5 = new com.toedter.calendar.JDateChooser();
        DiaCom6 = new com.toedter.calendar.JDateChooser();
        DiaCom7 = new com.toedter.calendar.JDateChooser();
        DiaCom8 = new com.toedter.calendar.JDateChooser();
        DiaCom9 = new com.toedter.calendar.JDateChooser();
        DiaCom10 = new com.toedter.calendar.JDateChooser();
        DiaCom11 = new com.toedter.calendar.JDateChooser();
        DiaCom12 = new com.toedter.calendar.JDateChooser();
        DiaCom13 = new com.toedter.calendar.JDateChooser();
        DiaCom14 = new com.toedter.calendar.JDateChooser();
        DiaCom15 = new com.toedter.calendar.JDateChooser();
        DiaCom16 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listas de asistencia");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("LISTA DE ASISTENCIA");

        jLabel1.setText("Quincena:");

        LDAQuin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona una Quincena", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));
        LDAQuin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LDAQuinItemStateChanged(evt);
            }
        });

        jLabel3.setText("Fecha:");

        jLabel4.setText("Nombre(s):");

        Fecha1.setDateFormatString("EEEE, d MMM y");

        Fecha2.setDateFormatString("EEEE, d MMM y");

        jLabel5.setText("Apellido P:");

        jLabel6.setText("Apellido M:");

        Fecha3.setDateFormatString("EEEE, d MMM y");

        Fecha4.setDateFormatString("EEEE, d MMM y");

        Fecha5.setDateFormatString("EEEE, d MMM y");

        Fecha6.setDateFormatString("EEEE, d MMM y");

        Fecha7.setDateFormatString("EEEE, d MMM y");

        Fecha8.setDateFormatString("EEEE, d MMM y");

        Fecha9.setDateFormatString("EEEE, d MMM y");

        Fecha10.setDateFormatString("EEEE, d MMM y");

        Fecha11.setDateFormatString("EEEE, d MMM y");

        Fecha12.setDateFormatString("EEEE, d MMM y");

        Fecha13.setDateFormatString("EEEE, d MMM y");

        Fecha14.setDateFormatString("EEEE, d MMM y");

        Fecha15.setDateFormatString("EEEE, d MMM y");

        Fecha16.setDateFormatString("EEEE, d MMM y");

        LDAAp.setEnabled(false);

        LDAAm.setEnabled(false);

        LDAName.setEnabled(false);

        LDA.setEditable(false);
        LDA.setText("0");

        jLabel8.setText("# Lista");

        CI.setText("Con imss");
        CI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CIActionPerformed(evt);
            }
        });

        MTL.setText("Mostrar todas las Fechas.");
        MTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MTLActionPerformed(evt);
            }
        });

        EmpleadosSh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        EmpleadosSh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmpleadosShMouseClicked(evt);
            }
        });
        EmpleadosSh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmpleadosShKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(EmpleadosSh);

        jLabel9.setText("Filtrar por:");

        LDAfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona filtro", "Apellido P", "Apellido M", "Nombre(s)" }));
        LDAfil.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LDAfilItemStateChanged(evt);
            }
        });

        LabelFil.setText("jLabel10");

        LDAfilname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LDAfilnameKeyReleased(evt);
            }
        });

        LDAfilap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LDAfilapKeyReleased(evt);
            }
        });

        LDAfilam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LDAfilamKeyReleased(evt);
            }
        });

        jLabel7.setText("Zona");

        LDAZon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LDAZonKeyReleased(evt);
            }
        });

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        jLabel11.setText("Ultima lista registrada:");

        ULDA.setText("0");

        NYear.setText("Año nuevo");
        NYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NYearActionPerformed(evt);
            }
        });

        jLabel10.setText("Filtro:");

        FillLCI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel12.setText("jLabel12");

        FillLCIQuin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(TableLDACI);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(FillLCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(FillLCIAp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane5.setViewportView(jPanel2);

        jTabbedPane3.addTab("Foraneos acapulco", jScrollPane5);

        jLabel13.setText("Filtro:");

        FillLCI1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel14.setText("jLabel12");

        FillLCIQuin1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(TableLDACI1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(FillLCI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(FillLCIAp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane8.setViewportView(jPanel3);

        jTabbedPane3.addTab("Foraneos puebla", jScrollPane8);

        jLabel15.setText("Filtro:");

        FillLCI2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel16.setText("jLabel12");

        FillLCIQuin2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane11.setViewportView(TableLDACI2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(FillLCI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(FillLCIAp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane10.setViewportView(jPanel4);

        jTabbedPane3.addTab("Foraneos toluca", jScrollPane10);

        jLabel17.setText("Filtro:");

        FillLCI3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel18.setText("jLabel12");

        FillLCIQuin3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane13.setViewportView(TableLDACI3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(FillLCI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(FillLCIAp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane12.setViewportView(jPanel5);

        jTabbedPane3.addTab("Norte", jScrollPane12);

        jLabel19.setText("Filtro:");

        FillLCI4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel20.setText("jLabel12");

        FillLCIQuin4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane15.setViewportView(TableLDACI4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(FillLCI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(FillLCIAp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane14.setViewportView(jPanel6);

        jTabbedPane3.addTab("Oficina", jScrollPane14);

        jLabel21.setText("Filtro:");

        FillLCI5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel22.setText("jLabel12");

        FillLCIQuin5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane17.setViewportView(TableLDACI5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(FillLCI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(FillLCIAp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane16.setViewportView(jPanel7);

        jTabbedPane3.addTab("Poniente", jScrollPane16);

        jLabel23.setText("Filtro:");

        FillLCI6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel24.setText("jLabel12");

        FillLCIQuin6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane19.setViewportView(TableLDACI6);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(FillLCI6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24)
                        .addComponent(FillLCIAp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane18.setViewportView(jPanel8);

        jTabbedPane3.addTab("Sur 1", jScrollPane18);

        jLabel25.setText("Filtro:");

        FillLCI7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel26.setText("jLabel12");

        FillLCIQuin7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane21.setViewportView(TableLDACI7);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(FillLCI7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)
                        .addComponent(FillLCIAp7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane20.setViewportView(jPanel9);

        jTabbedPane3.addTab("Sur 2", jScrollPane20);

        jLabel27.setText("Filtro:");

        FillLCI8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel28.setText("jLabel12");

        FillLCIQuin8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane23.setViewportView(TableLDACI8);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(FillLCI8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28)
                        .addComponent(FillLCIAp8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane22.setViewportView(jPanel10);

        jTabbedPane3.addTab("Santander Semanal", jScrollPane22);

        jLabel29.setText("Filtro:");

        FillLCI9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel30.setText("jLabel12");

        FillLCIQuin9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDACI9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane25.setViewportView(TableLDACI9);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCI9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAp9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIAm9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIName9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLCIQuin9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(FillLCI9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30)
                        .addComponent(FillLCIAp9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIAm9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLCIQuin9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane24.setViewportView(jPanel11);

        jTabbedPane3.addTab("Santander Quincenal", jScrollPane24);

        jScrollPane3.setViewportView(jTabbedPane3);

        jTabbedPane1.addTab("Listas con IMSS", jScrollPane3);

        jLabel31.setText("Filtro:");

        FillLSI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel32.setText("jLabel12");

        FillLSIQuin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane27.setViewportView(TableLDASI);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(FillLSI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32)
                        .addComponent(FillLSIAp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane26.setViewportView(jPanel12);

        jTabbedPane2.addTab("Foraneos acapulco", jScrollPane26);

        jLabel33.setText("Filtro:");

        FillLSI1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel34.setText("jLabel12");

        FillLSIQuin1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane29.setViewportView(TableLDASI1);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33)
                        .addComponent(FillLSI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34)
                        .addComponent(FillLSIAp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane29, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane28.setViewportView(jPanel13);

        jTabbedPane2.addTab("Foraneos puebla", jScrollPane28);

        jLabel35.setText("Filtro:");

        FillLSI2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel36.setText("jLabel12");

        FillLSIQuin2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane31.setViewportView(TableLDASI2);

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane31, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(FillLSI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel36)
                        .addComponent(FillLSIAp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane31, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane30.setViewportView(jPanel14);

        jTabbedPane2.addTab("Foraneos toluca", jScrollPane30);

        jLabel37.setText("Filtro:");

        FillLSI3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel38.setText("jLabel12");

        FillLSIQuin3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane33.setViewportView(TableLDASI3);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane33, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(FillLSI3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel38)
                        .addComponent(FillLSIAp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane33, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane32.setViewportView(jPanel15);

        jTabbedPane2.addTab("Norte", jScrollPane32);

        jLabel39.setText("Filtro:");

        FillLSI4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel40.setText("jLabel12");

        FillLSIQuin4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane35.setViewportView(TableLDASI4);

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane35, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel39)
                        .addComponent(FillLSI4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel40)
                        .addComponent(FillLSIAp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane35, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane34.setViewportView(jPanel16);

        jTabbedPane2.addTab("Oficina", jScrollPane34);

        jLabel41.setText("Filtro:");

        FillLSI5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel42.setText("jLabel12");

        FillLSIQuin5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane37.setViewportView(TableLDASI5);

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane37, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton17)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel41)
                        .addComponent(FillLSI5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel42)
                        .addComponent(FillLSIAp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane37, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane36.setViewportView(jPanel17);

        jTabbedPane2.addTab("Poniente", jScrollPane36);

        jLabel43.setText("Filtro:");

        FillLSI6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel44.setText("jLabel12");

        FillLSIQuin6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane39.setViewportView(TableLDASI6);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane39, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel43)
                        .addComponent(FillLSI6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44)
                        .addComponent(FillLSIAp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane39, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane38.setViewportView(jPanel18);

        jTabbedPane2.addTab("Sur 1", jScrollPane38);

        jLabel45.setText("Filtro:");

        FillLSI7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel46.setText("jLabel12");

        FillLSIQuin7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane41.setViewportView(TableLDASI7);

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane41, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton19)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel45)
                        .addComponent(FillLSI7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel46)
                        .addComponent(FillLSIAp7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane41, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane40.setViewportView(jPanel19);

        jTabbedPane2.addTab("Sur 2", jScrollPane40);

        jLabel47.setText("Filtro:");

        FillLSI8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel48.setText("jLabel12");

        FillLSIQuin8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane43.setViewportView(TableLDASI8);

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane43, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton20)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel47)
                        .addComponent(FillLSI8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel48)
                        .addComponent(FillLSIAp8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane43, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane42.setViewportView(jPanel20);

        jTabbedPane2.addTab("Santander Semanal", jScrollPane42);

        jLabel49.setText("Filtro:");

        FillLSI9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar filtro", "Apellido P", "Apellido M", "Nombre(s)", "Quincenas" }));

        jLabel50.setText("jLabel12");

        FillLSIQuin9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1ra Quincena de Enero", "2da Quincena de Enero", "1ra Quincena de Febrero", "2da Quincena de Febrero", "2da Quincena de Feb B", "1ra Quincena de Marzo", "2da Quincena de Marzo", "1ra Quincena de Abril", "2da Quincena de Abril", "1ra Quincena de Mayo", "2da Quincena de Mayo", "1ra Quincena de Junio", "2da Quincena de Junio", "1ra Quincena de Julio", "2da Quincena de Julio", "1ra Quincena de Agosto", "2da Quincena de Agosto", "1ra Quincena de Septiembre", "2da Quincena de Septiembre", "1ra Quincena de Octubre", "2da Quincena de Octubre", "1ra Quincena de Noviembre", "2da Quincena de Noviembre", "1ra Quincena de Diciembre", "2da Quincena de Diciembre" }));

        TableLDASI9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane45.setViewportView(TableLDASI9);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Microsoft-Excel-Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane45, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSI9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAp9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIAm9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIName9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FillLSIQuin9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton21)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49)
                        .addComponent(FillLSI9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel50)
                        .addComponent(FillLSIAp9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIAm9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FillLSIQuin9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane45, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane44.setViewportView(jPanel21);

        jTabbedPane2.addTab("Santander Quincenal", jScrollPane44);

        jScrollPane4.setViewportView(jTabbedPane2);

        jTabbedPane1.addTab("Listas sin IMSS", jScrollPane4);

        DiaCor1.setDateFormatString("d");

        DiaCor2.setDateFormatString("d");

        DiaCor3.setDateFormatString("d");

        DiaCor4.setDateFormatString("d");

        DiaCor5.setDateFormatString("d");

        DiaCor6.setDateFormatString("d");

        DiaCor7.setDateFormatString("d");

        DiaCor8.setDateFormatString("d");

        DiaCor9.setDateFormatString("d");

        DiaCor10.setDateFormatString("d");

        DiaCor11.setDateFormatString("d");

        DiaCor12.setDateFormatString("d");

        DiaCor13.setDateFormatString("d");

        DiaCor14.setDateFormatString("d");

        DiaCor15.setDateFormatString("d");

        DiaCor16.setDateFormatString("d");

        DiaCom1.setDateFormatString("EEEE");

        DiaCom2.setDateFormatString("EEEE");

        DiaCom3.setDateFormatString("EEEE");

        DiaCom4.setDateFormatString("EEEE");

        DiaCom5.setDateFormatString("EEEE");

        DiaCom6.setDateFormatString("EEEE");

        DiaCom7.setDateFormatString("EEEE");

        DiaCom8.setDateFormatString("EEEE");

        DiaCom9.setDateFormatString("EEEE");

        DiaCom10.setDateFormatString("EEEE");

        DiaCom11.setDateFormatString("EEEE");

        DiaCom12.setDateFormatString("EEEE");

        DiaCom13.setDateFormatString("EEEE");

        DiaCom14.setDateFormatString("EEEE");

        DiaCom15.setDateFormatString("EEEE");

        DiaCom16.setDateFormatString("EEEE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha12, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DiaCom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(154, 154, 154)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(LDAAp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LDAAm, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(LDAName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Agregar))
                                    .addComponent(jLabel4)))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(MTL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ULDA))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(LDAQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(NYear))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(LDA, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(LDAZon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(CI))
                                            .addComponent(jLabel3)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(301, 301, 301)
                                .addComponent(jLabel2)))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LDAfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelFil)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LDAfilname, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LDAfilap, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LDAfilam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LDA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(CI)
                            .addComponent(jLabel7)
                            .addComponent(LDAZon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MTL)
                            .addComponent(jLabel11)
                            .addComponent(ULDA))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(LDAQuin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NYear))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DiaCor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(LDAfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelFil)
                            .addComponent(LDAfilname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LDAfilap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LDAfilam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LDAAp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LDAAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LDAName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Agregar)))
                    .addComponent(DiaCom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DiaCor15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DiaCor14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(DiaCor12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(DiaCor10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(DiaCor9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Fecha7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCor7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(DiaCom7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addComponent(Fecha8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addComponent(DiaCor8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(Fecha9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(DiaCom8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(DiaCom9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(Fecha10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(DiaCom10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(Fecha11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(DiaCor11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(Fecha12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(DiaCom11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(DiaCom12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Fecha13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(DiaCor13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Fecha14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(DiaCom13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(DiaCom14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Fecha15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DiaCom15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Fecha16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiaCor16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DiaCom16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void MostrarULDA() {
        if (CI.isSelected() == true) {
            String SQL = "SELECT `AUTO_INCREMENT` FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'confort' AND TABLE_NAME = 'nomina.listas." + LDAZon.getText() + "'";
            try {
                java.sql.Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(SQL);
                while (rs.next()) {

                    ULDA.setText("" + (Integer.parseInt(rs.getString("AUTO_INCREMENT")) - 1));
                }
                st.isClosed();
                rs.isClosed();
            } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, "Error al mostrar ultima lista registrada de " + LDAZon.getText() + ": " + e);

            }

        }
        if (CI.isSelected() == false) {
            String SQL = "SELECT `AUTO_INCREMENT` FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'confort' AND TABLE_NAME = 'nomina.listas." + LDAZon.getText() + ".simss'";
            try {
                java.sql.Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(SQL);
                while (rs.next()) {

                    ULDA.setText("" + (Integer.parseInt(rs.getString("AUTO_INCREMENT")) - 1));
                }
                st.isClosed();
                rs.isClosed();
            } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, "Error al mostrar ultima lista registrada de " + LDAZon.getText() + ": " + e);

            }
        }
    }

    public void SHempleados() {
        //Buscar empleado
        String Share = LDAfilname.getText();
        String ShareAP = LDAfilap.getText();
        String ShareAM = LDAfilam.getText();
        String SQL = "select `Apellido P`, `Apellido M`, `Nombre(s)`, `Zona` "
                + " from empleados where `Status` LIKE '%Vigente%'";

        if (!"".equals(Share)) {
            SQL = " select `Apellido P`, `Apellido M`, `Nombre(s)`, `Zona` "
                    + "from empleados WHERE `Nombre(s)` LIKE '%" + Share + "%'";
        } else if (!"".equals(ShareAP)) {
            SQL = " select `Apellido P`, `Apellido M`, `Nombre(s)`, `Zona` "
                    + "from empleados WHERE `Apellido P` LIKE '%" + ShareAP + "%'";
        } else if (!"".equals(ShareAM)) {
            SQL = " select `Apellido P`, `Apellido M`, `Nombre(s)`, `Zona` "
                    + "from empleados WHERE `Apellido M` LIKE '%" + ShareAM + "%'";
        }

        try {
            //Cargar datos
            DefaultTableModel modelo = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int filas, int columna) {
                    return false;
                }

            };
//Nombre de la tabla
            EmpleadosSh.setModel(modelo);
            PreparedStatement ps;
            ResultSet rs;

            ps = con.prepareStatement(SQL);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Apellido P");//1
            modelo.addColumn("Apellido M");
            modelo.addColumn("Nombre(s)");//3
            modelo.addColumn("Zona");

//Anchos
            int[] anchos = {50, 50, 100, 50};

            for (int x = 0; x < cantidadColumnas; x++) {
                //Nombre tabla
                EmpleadosSh.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
            ps.isClosed();
            rs.isClosed();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al compartir datos con Listas de asistencia: " + ex.getMessage());

        }

    }

    public void AgregarLDA() {
        if (CI.isSelected() == true) {
            String SQL = "INSERT INTO `nomina.listas." + LDAZon.getText() + "` (`NDL`, `Zona`, `Quincena`, `Dia 1/16`, `Dia 2/17`,"
                    + " `Dia 3/18`, `Dia 4/19`, `Dia 5/20`, `Dia 6/21`, `Dia 7/22`, `Dia 8/23`, `Dia 9/24`,"
                    + " `Dia 10/25`, `Dia 11/26`, `Dia 12/27`, `Dia 13/28`, `Dia 14/29`, `Dia 15/30`, "
                    + "`Dia 31`, `Apellido P`, `Apellido M`, `Nombre(s)`) VALUES (?, ?, ?, ?, ?, ?, ?,"
                    + " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                PreparedStatement pst = con.prepareStatement(SQL);
                pst.setInt(1, Integer.parseInt(LDA.getText()));
                pst.setString(2, LDAZon.getText());
                pst.setString(3, LDAQuin.getSelectedItem().toString());
                pst.setString(4, ((JTextField) Fecha1.getDateEditor().getUiComponent()).getText());
                pst.setString(5, ((JTextField) Fecha2.getDateEditor().getUiComponent()).getText());
                pst.setString(6, ((JTextField) Fecha3.getDateEditor().getUiComponent()).getText());
                pst.setString(7, ((JTextField) Fecha4.getDateEditor().getUiComponent()).getText());
                pst.setString(8, ((JTextField) Fecha5.getDateEditor().getUiComponent()).getText());
                pst.setString(9, ((JTextField) Fecha6.getDateEditor().getUiComponent()).getText());
                pst.setString(10, ((JTextField) Fecha7.getDateEditor().getUiComponent()).getText());
                pst.setString(11, ((JTextField) Fecha8.getDateEditor().getUiComponent()).getText());
                pst.setString(12, ((JTextField) Fecha9.getDateEditor().getUiComponent()).getText());
                pst.setString(13, ((JTextField) Fecha10.getDateEditor().getUiComponent()).getText());
                pst.setString(14, ((JTextField) Fecha11.getDateEditor().getUiComponent()).getText());
                pst.setString(15, ((JTextField) Fecha12.getDateEditor().getUiComponent()).getText());
                pst.setString(16, ((JTextField) Fecha13.getDateEditor().getUiComponent()).getText());
                pst.setString(17, ((JTextField) Fecha14.getDateEditor().getUiComponent()).getText());
                pst.setString(18, ((JTextField) Fecha15.getDateEditor().getUiComponent()).getText());
                pst.setString(19, ((JTextField) Fecha16.getDateEditor().getUiComponent()).getText());
                pst.setString(20, LDAAp.getText());
                pst.setString(21, LDAAm.getText());
                pst.setString(22, LDAName.getText());

                pst.executeUpdate();

                MostrarULDA();

                JFileChooser chooser = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Excel", "xlsx");
                chooser.setSelectedFile(new File("Lista de " + LDAAp.getText() + " " + LDAAm.getText() + " " + LDAName.getText() + " de la "
                        + LDAQuin.getSelectedItem().toString()));
                chooser.setFileFilter(filter);
                chooser.setDialogTitle("Guardar archivo");
                chooser.setAcceptAllFileFilterUsed(false);
                if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    String ruta = chooser.getSelectedFile().toString().concat(".xlsx"); //extención del archivo excel
                }
                try {
                    String ruta = chooser.getSelectedFile().toString().concat(".xlsx");
                    File archivoXLS = new File(ruta);
                    if (archivoXLS.exists()) {
                        archivoXLS.delete();
                    }
                    archivoXLS.createNewFile();

                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection connect = DriverManager.getConnection(
                            "jdbc:mysql://192.168.1.170:3306/confort",
                            "Servidor",
                            "Confort1022"
                    );

                    Statement statement = connect.createStatement();
                    ResultSet resultSet = statement.executeQuery("SELECT * FROM `nomina.listas." + LDAZon.getText() + "` WHERE " + ULDA.getText());
                    try ( FileOutputStream archivo = new FileOutputStream(archivoXLS)) {
                        XSSFWorkbook libro = new XSSFWorkbook();
                        XSSFSheet spreadsheet = libro.createSheet(("Lista"));

                        XSSFRow row = spreadsheet.createRow((short) 0);
                        XSSFCell cell = (XSSFCell) row.createCell((short) 0);

                        XSSFCellStyle Encabezado = libro.createCellStyle();
                        Encabezado.setAlignment(XSSFCellStyle.ALIGN_CENTER);
                        Encabezado.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);

                        XSSFCellStyle Fechas = libro.createCellStyle();

                        Fechas.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderLeft(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderRight(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderTop(XSSFCellStyle.BORDER_THIN);
                        Fechas.setAlignment(XSSFCellStyle.ALIGN_JUSTIFY);
                        Fechas.setVerticalAlignment(XSSFCellStyle.VERTICAL_JUSTIFY);

                        XSSFCellStyle Contenido = libro.createCellStyle();
                        Contenido.setAlignment(XSSFCellStyle.ALIGN_CENTER);
                        Contenido.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);
                        Contenido.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderLeft(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderRight(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderTop(XSSFCellStyle.BORDER_THIN);

                        cell.setCellValue("L I S T A  D E  A S I S T E N C I A");
                        cell.setCellStyle(Encabezado);

                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        0, //first row (0-based)
                                        0, //last row (0-based)
                                        0, //first column (0-based)
                                        9 //last column (0-based)
                                )
                        );

                        row = spreadsheet.createRow(1);
                        cell = row.createCell(2);
                        cell.setCellValue("CONFORT SERVICE PRESTIGE DE MEXICO S.A. DE C.V.");
                        cell.setCellStyle(Encabezado);

                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        1, //first row (0-based)
                                        1, //last row (0-based)
                                        2, //first column (0-based)
                                        7 //last column (0-based)
                                )
                        );
//quincena etc mañana
                        row = spreadsheet.createRow(4);
                        row.setHeight((short) 500);
                        cell = row.createCell(0);
                        spreadsheet.setColumnWidth(0, 4500);
                        cell.setCellValue("Fecha");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(1);
                        cell.setCellValue("Nombre completo");
                        cell.setCellStyle(Contenido);
                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        4, //first row (0-based)
                                        4, //last row (0-based)
                                        1, //first column (0-based)
                                        3 //last column (0-based)
                                )
                        );
                        cell = row.createCell(2);
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(3);
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(4);
                        cell.setCellValue("Entrada");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(5);
                        cell.setCellValue("Salida");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(6);
                        spreadsheet.setColumnWidth(6, 3000);
                        cell.setCellValue("Firma");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(7);
                        spreadsheet.setColumnWidth(7, 5650);
                        cell.setCellValue("Lugar");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(8);
                        spreadsheet.setColumnWidth(8, 4500);
                        cell.setCellValue("Doble");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(9);
                        spreadsheet.setColumnWidth(9, 5650);
                        cell.setCellValue("Observaciones");
                        cell.setCellStyle(Contenido);

                        //  int i = 2;
                        while (resultSet.next()) {
                            row = spreadsheet.createRow(2);
                            row.setHeight((short) 400);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Quincena"));
                            cell.setCellStyle(Contenido);

                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            2, //first row (0-based)
                                            2, //last row (0-based)
                                            0, //first column (0-based)
                                            2 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);

                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            2, //first row (0-based)
                                            2, //last row (0-based)
                                            4, //first column (0-based)
                                            7 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(4);
                            cell.setCellValue(resultSet.getString("Apellido P") + " "
                                    + resultSet.getString("Apellido M") + " " + resultSet.getString("Nombre(s)"));
                            cell.setCellStyle(Encabezado);

                            cell = row.createCell(5);
                            cell.setCellValue(resultSet.getString("Apellido P") + " "
                                    + resultSet.getString("Apellido M") + " " + resultSet.getString("Nombre(s)"));
                            cell = row.createCell(6);
                            cell.setCellStyle(Encabezado);

                            cell.setCellValue(resultSet.getString("Apellido P") + " "
                                    + resultSet.getString("Apellido M") + " " + resultSet.getString("Nombre(s)"));
                            cell.setCellStyle(Encabezado);

                            cell = row.createCell(7);
                            cell.setCellValue(resultSet.getString("Apellido P") + " "
                                    + resultSet.getString("Apellido M") + " " + resultSet.getString("Nombre(s)"));
                            cell.setCellStyle(Encabezado);

                            cell = row.createCell(8);
                            cell.setCellValue(resultSet.getString("Zona"));
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellValue(resultSet.getInt("NDL"));
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(5);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellStyle(Fechas);
                            cell.setCellValue(resultSet.getString("Dia 1/16"));
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            5, //first row (0-based)
                                            5, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(6);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 2/17"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            6, //first row (0-based)
                                            6, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(7);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 3/18"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            7, //first row (0-based)
                                            7, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(8);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 4/19"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            8, //first row (0-based)
                                            8, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(9);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 5/20"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            9, //first row (0-based)
                                            9, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(10);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 6/21"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            10, //first row (0-based)
                                            10, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(11);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 7/22"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            11, //first row (0-based)
                                            11, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(12);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 8/23"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            12, //first row (0-based)
                                            12, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(13);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 9/24"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            13, //first row (0-based)
                                            13, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(14);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 10/25"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            14, //first row (0-based)
                                            14, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(15);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 11/26"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            15, //first row (0-based)
                                            15, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(16);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 12/27"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            16, //first row (0-based)
                                            16, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(17);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 13/28"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            17, //first row (0-based)
                                            17, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(18);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 14/29"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            18, //first row (0-based)
                                            18, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(19);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 15/30"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            19, //first row (0-based)
                                            19, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(20);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 31"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            20, //first row (0-based)
                                            20, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            /*row = spreadsheet.createRow(17);
                    cell = row.createCell(i);
                    cell.setCellValue(resultSet.getString("Apellido M"));
                    cell = row.createCell(5);
                    cell.setCellValue(resultSet.getString("Nombre(s)"));
                    i++;*/
                        }
                        spreadsheet.getPrintSetup();
                        spreadsheet.getPrintSetup().setPaperSize(PaperSize.LETTER_PAPER);
                        spreadsheet.getPrintSetup().setLandscape(true); // Dirección de impresión, true: horizontal, false: vertical
                        spreadsheet.setMargin(HSSFSheet.BottomMargin, (double) 0.1); // Margen (abajo)  
                        spreadsheet.setMargin(HSSFSheet.LeftMargin, (double) 0.1); // Margen (izquierda)
                        spreadsheet.setMargin(HSSFSheet.RightMargin, (double) 0.1); // Margen (derecha)
                        spreadsheet.setMargin(HSSFSheet.TopMargin, (double) 0.49); // Margen (arriba)
                        spreadsheet.setMargin(HSSFSheet.FooterMargin, (double) 0.1);
                        spreadsheet.setMargin(HSSFSheet.HeaderMargin, (double) 0.1);

                        spreadsheet.setHorizontallyCenter(true); // Establecer la página impresa para que se centre horizontalmente
                        libro.write(archivo);
                    }
                    Desktop.getDesktop().open(archivoXLS);
                } catch (IOException | NumberFormatException e) {
                    try {
                        throw e;
                    } catch (IOException | NumberFormatException ex) {
                        Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
                pst.isClosed();

                LDAZon.setText("");
                LDAQuin.setSelectedIndex(0);
                LDAAp.setText("");
                LDAAm.setText("");
                LDAName.setText("");
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);

                JOptionPane.showMessageDialog(null, "Lista de asistencia registrada.");

            } catch (SQLException error_AddLDA) {
                JOptionPane.showMessageDialog(null, "Error al registrar lista de asistencia: " + error_AddLDA);
            }

        }
        if (CI.isSelected() == false) {
            String SQL = "INSERT INTO `nomina.listas." + LDAZon.getText() + ".simss` (`NDL`, `Zona`, `Quincena`, `Dia 1/16`, `Dia 2/17`,"
                    + " `Dia 3/18`, `Dia 4/19`, `Dia 5/20`, `Dia 6/21`, `Dia 7/22`, `Dia 8/23`, `Dia 9/24`,"
                    + " `Dia 10/25`, `Dia 11/26`, `Dia 12/27`, `Dia 13/28`, `Dia 14/29`, `Dia 15/30`, "
                    + "`Dia 31`, `Apellido P`, `Apellido M`, `Nombre(s)`) VALUES (?, ?, ?, ?, ?, ?, ?,"
                    + " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try {
                PreparedStatement pst = con.prepareStatement(SQL);
                pst.setInt(1, Integer.parseInt(LDA.getText()));
                pst.setString(2, LDAZon.getText());
                pst.setString(3, LDAQuin.getSelectedItem().toString());
                pst.setString(4, ((JTextField) Fecha1.getDateEditor().getUiComponent()).getText());
                pst.setString(5, ((JTextField) Fecha2.getDateEditor().getUiComponent()).getText());
                pst.setString(6, ((JTextField) Fecha3.getDateEditor().getUiComponent()).getText());
                pst.setString(7, ((JTextField) Fecha4.getDateEditor().getUiComponent()).getText());
                pst.setString(8, ((JTextField) Fecha5.getDateEditor().getUiComponent()).getText());
                pst.setString(9, ((JTextField) Fecha6.getDateEditor().getUiComponent()).getText());
                pst.setString(10, ((JTextField) Fecha7.getDateEditor().getUiComponent()).getText());
                pst.setString(11, ((JTextField) Fecha8.getDateEditor().getUiComponent()).getText());
                pst.setString(12, ((JTextField) Fecha9.getDateEditor().getUiComponent()).getText());
                pst.setString(13, ((JTextField) Fecha10.getDateEditor().getUiComponent()).getText());
                pst.setString(14, ((JTextField) Fecha11.getDateEditor().getUiComponent()).getText());
                pst.setString(15, ((JTextField) Fecha12.getDateEditor().getUiComponent()).getText());
                pst.setString(16, ((JTextField) Fecha13.getDateEditor().getUiComponent()).getText());
                pst.setString(17, ((JTextField) Fecha14.getDateEditor().getUiComponent()).getText());
                pst.setString(18, ((JTextField) Fecha15.getDateEditor().getUiComponent()).getText());
                pst.setString(19, ((JTextField) Fecha16.getDateEditor().getUiComponent()).getText());
                pst.setString(20, LDAAp.getText());
                pst.setString(21, LDAAm.getText());
                pst.setString(22, LDAName.getText());

                pst.executeUpdate();

                MostrarULDA();

                JFileChooser chooser = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Excel", "xlsx");
                chooser.setSelectedFile(new File("Lista " + ULDA.getText() + " de " + LDAZon.getText() + "de la " + LDAQuin.getSelectedItem().toString()));
                chooser.setFileFilter(filter);
                chooser.setDialogTitle("Guardar archivo");
                chooser.setAcceptAllFileFilterUsed(false);
                if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    String ruta = chooser.getSelectedFile().toString().concat(".xlsx"); //extención del archivo excel
                }
                try {
                    String ruta = chooser.getSelectedFile().toString().concat(".xlsx");
                    File archivoXLS = new File(ruta);
                    if (archivoXLS.exists()) {
                        archivoXLS.delete();
                    }
                    archivoXLS.createNewFile();

                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection connect = DriverManager.getConnection(
                            "jdbc:mysql://192.168.1.170:3306/confort",
                            "Servidor",
                            "Confort1022"
                    );

                    Statement statement = connect.createStatement();
                    ResultSet resultSet = statement.executeQuery("SELECT * FROM `nomina.listas." + LDAZon.getText() + ".simss` WHERE " + ULDA.getText());
                    try ( FileOutputStream archivo = new FileOutputStream(archivoXLS)) {
                        XSSFWorkbook libro = new XSSFWorkbook();
                        XSSFSheet spreadsheet = libro.createSheet("Lista " + ULDA.getText() + " de " + LDAZon.getText() + "de la " + LDAQuin.getSelectedItem().toString());

                        XSSFRow row = spreadsheet.createRow((short) 0);
                        XSSFCell cell = (XSSFCell) row.createCell((short) 0);

                        XSSFCellStyle Encabezado = libro.createCellStyle();
                        Encabezado.setAlignment(XSSFCellStyle.ALIGN_CENTER);
                        Encabezado.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);

                        XSSFCellStyle Fechas = libro.createCellStyle();

                        Fechas.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderLeft(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderRight(XSSFCellStyle.BORDER_THIN);
                        Fechas.setBorderTop(XSSFCellStyle.BORDER_THIN);
                        Fechas.setAlignment(XSSFCellStyle.ALIGN_JUSTIFY);
                        Fechas.setVerticalAlignment(XSSFCellStyle.VERTICAL_JUSTIFY);

                        XSSFCellStyle Contenido = libro.createCellStyle();
                        Contenido.setAlignment(XSSFCellStyle.ALIGN_CENTER);
                        Contenido.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);
                        Contenido.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderLeft(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderRight(XSSFCellStyle.BORDER_THIN);
                        Contenido.setBorderTop(XSSFCellStyle.BORDER_THIN);

                        cell.setCellValue("L I S T A  D E  A S I S T E N C I A");
                        cell.setCellStyle(Encabezado);

                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        0, //first row (0-based)
                                        0, //last row (0-based)
                                        0, //first column (0-based)
                                        9 //last column (0-based)
                                )
                        );

                        row = spreadsheet.createRow(1);
                        cell = row.createCell(2);
                        cell.setCellValue("CONFORT SERVICE PRESTIGE");
                        cell.setCellStyle(Encabezado);

                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        1, //first row (0-based)
                                        1, //last row (0-based)
                                        2, //first column (0-based)
                                        7 //last column (0-based)
                                )
                        );
//quincena etc mañana
                        row = spreadsheet.createRow(4);
                        row.setHeight((short) 500);
                        cell = row.createCell(0);
                        spreadsheet.setColumnWidth(0, 4500);
                        cell.setCellValue("Fecha");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(1);
                        cell.setCellValue("Nombre completo");
                        cell.setCellStyle(Contenido);
                        spreadsheet.addMergedRegion(
                                new CellRangeAddress(
                                        4, //first row (0-based)
                                        4, //last row (0-based)
                                        1, //first column (0-based)
                                        3 //last column (0-based)
                                )
                        );
                        cell = row.createCell(2);
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(3);
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(4);
                        cell.setCellValue("Entrada");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(5);
                        cell.setCellValue("Salida");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(6);
                        spreadsheet.setColumnWidth(6, 3000);
                        cell.setCellValue("Firma");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(7);
                        spreadsheet.setColumnWidth(7, 5650);
                        cell.setCellValue("Lugar");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(8);
                        spreadsheet.setColumnWidth(8, 4500);
                        cell.setCellValue("Doble");
                        cell.setCellStyle(Contenido);
                        cell = row.createCell(9);
                        spreadsheet.setColumnWidth(9, 5650);
                        cell.setCellValue("Observaciones");
                        cell.setCellStyle(Contenido);

                        //  int i = 2;
                        while (resultSet.next()) {
                            row = spreadsheet.createRow(2);
                            row.setHeight((short) 400);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Quincena"));
                            cell.setCellStyle(Contenido);

                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            2, //first row (0-based)
                                            2, //last row (0-based)
                                            0, //first column (0-based)
                                            2 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellValue("Servicio");
                            cell.setCellStyle(Contenido);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            2, //first row (0-based)
                                            2, //last row (0-based)
                                            4, //first column (0-based)
                                            7 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellValue(resultSet.getString("Zona"));
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellValue(resultSet.getString("NDL"));
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(5);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellStyle(Fechas);
                            cell.setCellValue(resultSet.getString("Dia 1/16"));
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            5, //first row (0-based)
                                            5, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(6);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 2/17"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            6, //first row (0-based)
                                            6, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(7);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 3/18"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            7, //first row (0-based)
                                            7, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(8);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 4/19"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            8, //first row (0-based)
                                            8, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(9);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 5/20"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            9, //first row (0-based)
                                            9, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(10);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 6/21"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            10, //first row (0-based)
                                            10, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(11);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 7/22"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            11, //first row (0-based)
                                            11, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(12);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 8/23"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            12, //first row (0-based)
                                            12, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(13);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 9/24"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            13, //first row (0-based)
                                            13, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(14);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 10/25"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            14, //first row (0-based)
                                            14, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(15);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 11/26"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            15, //first row (0-based)
                                            15, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(16);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 12/27"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            16, //first row (0-based)
                                            16, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(17);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 13/28"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            17, //first row (0-based)
                                            17, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(18);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 14/29"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            18, //first row (0-based)
                                            18, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(19);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 15/30"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            19, //first row (0-based)
                                            19, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            row = spreadsheet.createRow(20);
                            row.setHeight((short) 600);
                            cell = row.createCell(0);
                            cell.setCellValue(resultSet.getString("Dia 31"));
                            cell.setCellStyle(Fechas);
                            spreadsheet.addMergedRegion(
                                    new CellRangeAddress(
                                            20, //first row (0-based)
                                            20, //last row (0-based)
                                            1, //first column (0-based)
                                            3 //last column (0-based)
                                    )
                            );
                            cell = row.createCell(1);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(2);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(3);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(4);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(5);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(6);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(7);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(8);
                            cell.setCellStyle(Contenido);
                            cell = row.createCell(9);
                            cell.setCellStyle(Contenido);

                            /*row = spreadsheet.createRow(17);
                    cell = row.createCell(i);
                    cell.setCellValue(resultSet.getString("Apellido M"));
                    cell = row.createCell(5);
                    cell.setCellValue(resultSet.getString("Nombre(s)"));
                    i++;*/
                        }
                        spreadsheet.getPrintSetup();
                        spreadsheet.getPrintSetup().setPaperSize(PaperSize.LETTER_PAPER);
                        spreadsheet.getPrintSetup().setLandscape(true); // Dirección de impresión, true: horizontal, false: vertical
                        spreadsheet.setMargin(HSSFSheet.BottomMargin, (double) 0.1); // Margen (abajo)  
                        spreadsheet.setMargin(HSSFSheet.LeftMargin, (double) 0.1); // Margen (izquierda)
                        spreadsheet.setMargin(HSSFSheet.RightMargin, (double) 0.1); // Margen (derecha)
                        spreadsheet.setMargin(HSSFSheet.TopMargin, (double) 0.49); // Margen (arriba)
                        spreadsheet.setMargin(HSSFSheet.FooterMargin, (double) 0.1);
                        spreadsheet.setMargin(HSSFSheet.HeaderMargin, (double) 0.1);

                        spreadsheet.setHorizontallyCenter(true); // Establecer la página impresa para que se centre horizontalmente
                        libro.write(archivo);
                    }
                    Desktop.getDesktop().open(archivoXLS);
                } catch (IOException | NumberFormatException e) {
                    try {
                        throw e;
                    } catch (IOException | NumberFormatException ex) {
                        Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }

                LDAZon.setText("");
                CI.setSelected(false);
                LDAQuin.setSelectedIndex(0);
                LDAAp.setText("");
                LDAAm.setText("");
                LDAName.setText("");
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);
                pst.isClosed();
                JOptionPane.showMessageDialog(null, "Lista de asistencia registrada.");
            } catch (SQLException error_AddLDA) {
                JOptionPane.showMessageDialog(null, "Error al registrar lista de asistencia" + error_AddLDA);
            }
        }

    }
//fechas

    public void MDTPCDA() {
        String FiltroN = FillLCIName.getText();
        String FAP = FillLCIAp.getText();
        String FAM = FillLCIAm.getText();
        String FQuin = FillLCIQuin.getSelectedItem().toString();
        String SQL = "SELECT * FROM `nomina.listas.foraneos acapulco`";

        if (!"".equals(FiltroN)) {
            SQL = "SELECT * FROM `nomina.listas.foraneos acapulco`"
                    + " where `Nombre(s)` LIKE '%" + FiltroN + "%'";
        } else if (!"".equals(FAP)) {
            SQL = "SELECT * FROM `nomina.listas.foraneos acapulco`"
                    + " Where `Apellido P` LIKE '%" + FAP + "%'";
        } else if (!"".equals(FAM)) {
            SQL = "SELECT * FROM `nomina.listas.foraneos acapulco`"
                    + " Where `Apellido M` LIKE '%" + FAM + "%'";
        } else if (!"".equals(FQuin)) {
            SQL = "SELECT * FROM `nomina.listas.foraneos acapulco`"
                    + " Where `Quincena` LIKE '%" + FQuin + "%'";
        }

        try {
            //Cargar datos
            DefaultTableModel modelo = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int filas, int columna) {
                    return false;
                }

            };
//Nombre de la tabla
            TableLDACI.setModel(modelo);
            PreparedStatement ps;
            ResultSet rs;

            ps = con.prepareStatement(SQL);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("# Lista");
            modelo.addColumn("Zona");//2
            modelo.addColumn("Quincena");//2
            modelo.addColumn("# Empleado");
            modelo.addColumn("Apellido P");//4
            modelo.addColumn("Apellido M");
            modelo.addColumn("Nombre(s)");//6
            modelo.addColumn("Zona");
            modelo.addColumn("Servicio");//8
            modelo.addColumn("Quincena");
            modelo.addColumn("Caja de ahorro");//10
            modelo.addColumn("Observaciones");
            modelo.addColumn("Qnas aportadas");//12
            modelo.addColumn("# de recibo de pago");

//ANCHOS
            int[] anchos = {/*ND*/50, /*NL*/ 50, /*NC*/ 50, /*NE*/ 50, /*AP*/ 60, /*AM*/ 60, /*NAME*/ 50, /*ZON*/ 50,
                /*SERV*/ 50, /*QUIN*/ 60, /*cda*/ 50, /*OBS*/ 100, /*QA*/ 60,/*NDRDP*/ 60};

            for (int x = 0; x < cantidadColumnas; x++) {
                //Nombre tabla
                TableLDACI.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        } catch (SQLException error_mostrsr_pcda) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos pagos de caja de ahorro: " + error_mostrsr_pcda.getMessage());

        }

    }

    private void LDAQuinItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LDAQuinItemStateChanged
        int vari = LDAQuin.getSelectedIndex();

        if (NYear.isSelected() == true) {
            // <editor-fold defaultstate="collapsed" desc="SelecalM1ionar">
            if (vari == 0) {
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);

            }
            //</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ENE">
            if (vari == 1) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);

                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                    DiaCor16.setDate(null);
                    DiaCom16.setDate(null);

                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            //</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ENE">

            if (vari == 2) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                    DiaCor16.setDate(fin);
                    DiaCom16.setDate(fin);

                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 FEB">
            if (vari == 3) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);

                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                    DiaCor16.setDate(null);
                    DiaCom16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb">

            if (vari == 4) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha14.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb B">

            if (vari == 5) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Marzo">
            if (vari == 6) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);
                    
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                    DiaCor16.setDate(null);
                    DiaCom16.setDate(null);
                    
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Marzo">

            if (vari == 7) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Abril">
            if (vari == 8) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);
                    
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                    DiaCor16.setDate(null);
                    DiaCom16.setDate(null);
                    
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 abril">

            if (vari == 9) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 may">
            if (vari == 10) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    DiaCor1.setDate(fin);
                    DiaCom1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    DiaCor2.setDate(fin);
                    DiaCom2.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    DiaCor3.setDate(fin);
                    DiaCom3.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    DiaCor4.setDate(fin);
                    DiaCom4.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    DiaCor5.setDate(fin);
                    DiaCom5.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    DiaCor6.setDate(fin);
                    DiaCom6.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    DiaCor7.setDate(fin);
                    DiaCom7.setDate(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    DiaCor8.setDate(fin);
                    DiaCom8.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    DiaCor9.setDate(fin);
                    DiaCom9.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    DiaCor10.setDate(fin);
                    DiaCom10.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    DiaCor11.setDate(fin);
                    DiaCom11.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    DiaCor12.setDate(fin);
                    DiaCom12.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    DiaCor13.setDate(fin);
                    DiaCom13.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    DiaCor14.setDate(fin);
                    DiaCom14.setDate(fin);
                    
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    DiaCor15.setDate(fin);
                    DiaCom15.setDate(fin);
                    
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                    DiaCor16.setDate(null);
                    DiaCom16.setDate(null);
                    
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 may">

            if (vari == 11) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 junio">
            if (vari == 12) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jun">

            if (vari == 13) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 jul">
            if (vari == 14) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jul">

            if (vari == 15) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ago">
            if (vari == 16) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ago">

            if (vari == 17) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 sep">
            if (vari == 18) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 sep">

            if (vari == 19) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 oct">
            if (vari == 20) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 oct">

            if (vari == 21) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 nov">
            if (vari == 22) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 nov">

            if (vari == 23) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 dic">
            if (vari == 24) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 dic">

            if (vari == 25) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
        }
        if (NYear.isSelected() == false) {
            // <editor-fold defaultstate="collapsed" desc="SelecalM1ionar">
            if (vari == 0) {
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);

            }
            //</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ENE">
            if (vari == 1) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            //</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ENE">

            if (vari == 2) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 FEB">
            if (vari == 3) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb">

            if (vari == 4) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha14.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb B">

            if (vari == 5) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Marzo">
            if (vari == 6) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Marzo">

            if (vari == 7) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Abril">
            if (vari == 8) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 abril">

            if (vari == 9) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 may">
            if (vari == 10) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 may">

            if (vari == 11) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 junio">
            if (vari == 12) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jun">

            if (vari == 13) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 jul">
            if (vari == 14) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jul">

            if (vari == 15) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ago">
            if (vari == 16) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ago">

            if (vari == 17) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 sep">
            if (vari == 18) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 sep">

            if (vari == 19) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 oct">
            if (vari == 20) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 oct">

            if (vari == 21) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 nov">
            if (vari == 22) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 nov">

            if (vari == 23) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 dic">
            if (vari == 24) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 dic">

            if (vari == 25) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
        }

    }//GEN-LAST:event_LDAQuinItemStateChanged

    private void MTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MTLActionPerformed
        if (MTL.isSelected() == false) {
            Fecha2.setVisible(false);
            Fecha3.setVisible(false);
            Fecha4.setVisible(false);
            Fecha5.setVisible(false);
            Fecha6.setVisible(false);
            Fecha7.setVisible(false);
            Fecha8.setVisible(false);
            Fecha9.setVisible(false);
            Fecha10.setVisible(false);
            Fecha11.setVisible(false);
            Fecha12.setVisible(false);
            Fecha13.setVisible(false);
            Fecha14.setVisible(false);
            Fecha15.setVisible(false);
            Fecha16.setVisible(false);
        }
        if (MTL.isSelected() == true) {
            Fecha2.setVisible(true);
            Fecha3.setVisible(true);
            Fecha4.setVisible(true);
            Fecha5.setVisible(true);
            Fecha6.setVisible(true);
            Fecha7.setVisible(true);
            Fecha8.setVisible(true);
            Fecha9.setVisible(true);
            Fecha10.setVisible(true);
            Fecha11.setVisible(true);
            Fecha12.setVisible(true);
            Fecha13.setVisible(true);
            Fecha14.setVisible(true);
            Fecha15.setVisible(true);
            Fecha16.setVisible(true);
        }
    }//GEN-LAST:event_MTLActionPerformed

    private void LDAfilapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LDAfilapKeyReleased
        SHempleados();
    }//GEN-LAST:event_LDAfilapKeyReleased

    private void LDAfilnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LDAfilnameKeyReleased
        SHempleados();
    }//GEN-LAST:event_LDAfilnameKeyReleased

    private void LDAfilamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LDAfilamKeyReleased
        SHempleados();
    }//GEN-LAST:event_LDAfilamKeyReleased

    private void EmpleadosShMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmpleadosShMouseClicked
        if (CI.isSelected() == true) {
            int fila = EmpleadosSh.getSelectedRow();
            LDAAp.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 0)));
            LDAAm.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 1)));
            LDAName.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 2)));
            LDAZon.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 3)));

        }
        if (CI.isSelected() == false) {
            int fila = EmpleadosSh.getSelectedRow();
            LDAZon.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 3)));

        }
        MostrarULDA();
    }//GEN-LAST:event_EmpleadosShMouseClicked

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        AgregarLDA();
    }//GEN-LAST:event_AgregarActionPerformed

    private void CIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CIActionPerformed
        if (CI.isSelected() == true) {
            LDAAp.setEnabled(true);
            LDAAm.setEnabled(true);
            LDAName.setEnabled(true);
            LDAAp.setText("");
            LDAAm.setText("");
            LDAName.setText("");
            int fila = EmpleadosSh.getSelectedRow();
            LDAAp.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 0)));
            LDAAm.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 1)));
            LDAName.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 2)));
            LDAZon.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 3)));

        }
        if (CI.isSelected() == false) {
            LDAAp.setEnabled(false);
            LDAAm.setEnabled(false);
            LDAName.setEnabled(false);
            LDAAp.setText("");
            LDAAm.setText("");
            LDAName.setText("");
        }
        MostrarULDA();

    }//GEN-LAST:event_CIActionPerformed

    private void NYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NYearActionPerformed
        int vari = LDAQuin.getSelectedIndex();

        if (NYear.isSelected() == true) {
            // <editor-fold defaultstate="collapsed" desc="SelecalM1ionar">
            if (vari == 0) {
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);

            }
            //</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ENE">
            if (vari == 1) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            //</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ENE">

            if (vari == 2) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 FEB">
            if (vari == 3) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb">

            if (vari == 4) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha14.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb B">

            if (vari == 5) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Marzo">
            if (vari == 6) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Marzo">

            if (vari == 7) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Abril">
            if (vari == 8) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 abril">

            if (vari == 9) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 may">
            if (vari == 10) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 may">

            if (vari == 11) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 junio">
            if (vari == 12) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jun">

            if (vari == 13) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 jul">
            if (vari == 14) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jul">

            if (vari == 15) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ago">
            if (vari == 16) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ago">

            if (vari == 17) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 sep">
            if (vari == 18) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 sep">

            if (vari == 19) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 oct">
            if (vari == 20) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 oct">

            if (vari == 21) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 nov">
            if (vari == 22) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 nov">

            if (vari == 23) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 dic">
            if (vari == 24) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 dic">

            if (vari == 25) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Calendar calY1 = Calendar.getInstance();
                    calY1.setTime(fin);
                    calY1.add(Calendar.YEAR, 1);
                    fin = calY1.getTime();
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
        }
        if (NYear.isSelected() == false) {
            // <editor-fold defaultstate="collapsed" desc="SelecalM1ionar">
            if (vari == 0) {
                Fecha1.setDate(null);
                Fecha2.setDate(null);
                Fecha3.setDate(null);
                Fecha4.setDate(null);
                Fecha5.setDate(null);
                Fecha6.setDate(null);
                Fecha7.setDate(null);
                Fecha8.setDate(null);
                Fecha9.setDate(null);
                Fecha10.setDate(null);
                Fecha11.setDate(null);
                Fecha12.setDate(null);
                Fecha13.setDate(null);
                Fecha14.setDate(null);
                Fecha15.setDate(null);
                Fecha16.setDate(null);

            }
            //</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ENE">
            if (vari == 1) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            //</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ENE">

            if (vari == 2) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ene.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 FEB">
            if (vari == 3) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb">

            if (vari == 4) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha14.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Feb B">

            if (vari == 5) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-feb.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);

                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha15.setDate(null);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Marzo">
            if (vari == 6) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    //calM1.add(Calendar.DATE, 1);
                    //fin = calM1.getTime();
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 Marzo">

            if (vari == 7) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-mar.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 Abril">
            if (vari == 8) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 abril">

            if (vari == 9) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-abr.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 may">
            if (vari == 10) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 may">

            if (vari == 11) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-may.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 junio">
            if (vari == 12) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jun">

            if (vari == 13) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jun.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 jul">
            if (vari == 14) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 jul">

            if (vari == 15) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-jul.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 ago">
            if (vari == 16) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 ago">

            if (vari == 17) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-ago.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 sep">
            if (vari == 18) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 sep">

            if (vari == 19) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-sep.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 oct">
            if (vari == 20) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 oct">

            if (vari == 21) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-oct.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 nov">
            if (vari == 22) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 nov">

            if (vari == 23) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-nov.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>

            // <editor-fold defaultstate="collapsed" desc="Q1 dic">
            if (vari == 24) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 1-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    /*calM1.add(Calendar.DATE, 1);
                fin = calM1.getTime();*/
                    Fecha16.setDate(null);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
            // <editor-fold defaultstate="collapsed" desc="Q2 dic">

            if (vari == 25) {
                try {
                    Date DTano = new Date();
                    SimpleDateFormat ano = new SimpleDateFormat("y");
                    SimpleDateFormat dias = new SimpleDateFormat("EEEE");
                    FG = dias.format(DTano) + ", 16-dic.-" + ano.format(DTano);
                    Date fin = new SimpleDateFormat("EEEE, d-MMM-y").parse(FG);
                    Fecha1.setDate(fin);
                    Calendar calM1 = Calendar.getInstance();
                    calM1.setTime(fin);

                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha2.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha3.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha4.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha5.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha6.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha7.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha8.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha9.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha10.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha11.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha12.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha13.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha14.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha15.setDate(fin);
                    calM1.add(Calendar.DATE, 1);
                    fin = calM1.getTime();
                    Fecha16.setDate(fin);
                } catch (ParseException ex) {
                    Logger.getLogger(Admin_Listas_5.class.getName()).log(Level.SEVERE, null, ex);
                }
            }//</editor-fold>
        }

    }//GEN-LAST:event_NYearActionPerformed

    private void LDAfilItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LDAfilItemStateChanged
        if (LDAfil.getSelectedIndex() == 0) {
            LabelFil.setVisible(false);
            LDAfilap.setVisible(false);
            LDAfilam.setVisible(false);
            LDAfilname.setVisible(false);
            LDAfilap.setText("");
            LDAfilam.setText("");
            LDAfilname.setText("");

        }
        if (LDAfil.getSelectedIndex() == 1) {
            LabelFil.setVisible(true);
            LabelFil.setText("Buscar Apellido P:");
            LDAfilap.setVisible(true);
            LDAfilam.setVisible(false);
            LDAfilname.setVisible(false);
            LDAfilap.setText("");
            LDAfilam.setText("");
            LDAfilname.setText("");

        }
        if (LDAfil.getSelectedIndex() == 2) {
            LabelFil.setVisible(true);
            LabelFil.setText("Buscar Apellido M:");
            LDAfilap.setVisible(false);
            LDAfilam.setVisible(true);
            LDAfilname.setVisible(false);
            LDAfilap.setText("");
            LDAfilam.setText("");
            LDAfilname.setText("");

        }
        if (LDAfil.getSelectedIndex() == 3) {
            LabelFil.setVisible(true);
            LabelFil.setText("Buscar Nombre(s)");
            LDAfilap.setVisible(false);
            LDAfilam.setVisible(false);
            LDAfilname.setVisible(true);
            LDAfilap.setText("");
            LDAfilam.setText("");
            LDAfilname.setText("");

        }
        SHempleados();
    }//GEN-LAST:event_LDAfilItemStateChanged

    private void EmpleadosShKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmpleadosShKeyReleased
        if (CI.isSelected() == true) {
            int fila = EmpleadosSh.getSelectedRow();
            LDAAp.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 0)));
            LDAAm.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 1)));
            LDAName.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 2)));
            LDAZon.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 3)));

        }
        if (CI.isSelected() == false) {
            int fila = EmpleadosSh.getSelectedRow();
            LDAZon.setText(String.valueOf(EmpleadosSh.getValueAt(fila, 3)));

        }
        MostrarULDA();
    }//GEN-LAST:event_EmpleadosShKeyReleased

    private void LDAZonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LDAZonKeyReleased
        MostrarULDA();

    }//GEN-LAST:event_LDAZonKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Listas_5.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Admin_Listas_5().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JCheckBox CI;
    private com.toedter.calendar.JDateChooser DiaCom1;
    private com.toedter.calendar.JDateChooser DiaCom10;
    private com.toedter.calendar.JDateChooser DiaCom11;
    private com.toedter.calendar.JDateChooser DiaCom12;
    private com.toedter.calendar.JDateChooser DiaCom13;
    private com.toedter.calendar.JDateChooser DiaCom14;
    private com.toedter.calendar.JDateChooser DiaCom15;
    private com.toedter.calendar.JDateChooser DiaCom16;
    private com.toedter.calendar.JDateChooser DiaCom2;
    private com.toedter.calendar.JDateChooser DiaCom3;
    private com.toedter.calendar.JDateChooser DiaCom4;
    private com.toedter.calendar.JDateChooser DiaCom5;
    private com.toedter.calendar.JDateChooser DiaCom6;
    private com.toedter.calendar.JDateChooser DiaCom7;
    private com.toedter.calendar.JDateChooser DiaCom8;
    private com.toedter.calendar.JDateChooser DiaCom9;
    private com.toedter.calendar.JDateChooser DiaCor1;
    private com.toedter.calendar.JDateChooser DiaCor10;
    private com.toedter.calendar.JDateChooser DiaCor11;
    private com.toedter.calendar.JDateChooser DiaCor12;
    private com.toedter.calendar.JDateChooser DiaCor13;
    private com.toedter.calendar.JDateChooser DiaCor14;
    private com.toedter.calendar.JDateChooser DiaCor15;
    private com.toedter.calendar.JDateChooser DiaCor16;
    private com.toedter.calendar.JDateChooser DiaCor2;
    private com.toedter.calendar.JDateChooser DiaCor3;
    private com.toedter.calendar.JDateChooser DiaCor4;
    private com.toedter.calendar.JDateChooser DiaCor5;
    private com.toedter.calendar.JDateChooser DiaCor6;
    private com.toedter.calendar.JDateChooser DiaCor7;
    private com.toedter.calendar.JDateChooser DiaCor8;
    private com.toedter.calendar.JDateChooser DiaCor9;
    private javax.swing.JTable EmpleadosSh;
    private com.toedter.calendar.JDateChooser Fecha1;
    private com.toedter.calendar.JDateChooser Fecha10;
    private com.toedter.calendar.JDateChooser Fecha11;
    private com.toedter.calendar.JDateChooser Fecha12;
    private com.toedter.calendar.JDateChooser Fecha13;
    private com.toedter.calendar.JDateChooser Fecha14;
    private com.toedter.calendar.JDateChooser Fecha15;
    private com.toedter.calendar.JDateChooser Fecha16;
    private com.toedter.calendar.JDateChooser Fecha2;
    private com.toedter.calendar.JDateChooser Fecha3;
    private com.toedter.calendar.JDateChooser Fecha4;
    private com.toedter.calendar.JDateChooser Fecha5;
    private com.toedter.calendar.JDateChooser Fecha6;
    private com.toedter.calendar.JDateChooser Fecha7;
    private com.toedter.calendar.JDateChooser Fecha8;
    private com.toedter.calendar.JDateChooser Fecha9;
    private javax.swing.JComboBox<String> FillLCI;
    private javax.swing.JComboBox<String> FillLCI1;
    private javax.swing.JComboBox<String> FillLCI2;
    private javax.swing.JComboBox<String> FillLCI3;
    private javax.swing.JComboBox<String> FillLCI4;
    private javax.swing.JComboBox<String> FillLCI5;
    private javax.swing.JComboBox<String> FillLCI6;
    private javax.swing.JComboBox<String> FillLCI7;
    private javax.swing.JComboBox<String> FillLCI8;
    private javax.swing.JComboBox<String> FillLCI9;
    private javax.swing.JTextField FillLCIAm;
    private javax.swing.JTextField FillLCIAm1;
    private javax.swing.JTextField FillLCIAm2;
    private javax.swing.JTextField FillLCIAm3;
    private javax.swing.JTextField FillLCIAm4;
    private javax.swing.JTextField FillLCIAm5;
    private javax.swing.JTextField FillLCIAm6;
    private javax.swing.JTextField FillLCIAm7;
    private javax.swing.JTextField FillLCIAm8;
    private javax.swing.JTextField FillLCIAm9;
    private javax.swing.JTextField FillLCIAp;
    private javax.swing.JTextField FillLCIAp1;
    private javax.swing.JTextField FillLCIAp2;
    private javax.swing.JTextField FillLCIAp3;
    private javax.swing.JTextField FillLCIAp4;
    private javax.swing.JTextField FillLCIAp5;
    private javax.swing.JTextField FillLCIAp6;
    private javax.swing.JTextField FillLCIAp7;
    private javax.swing.JTextField FillLCIAp8;
    private javax.swing.JTextField FillLCIAp9;
    private javax.swing.JTextField FillLCIName;
    private javax.swing.JTextField FillLCIName1;
    private javax.swing.JTextField FillLCIName2;
    private javax.swing.JTextField FillLCIName3;
    private javax.swing.JTextField FillLCIName4;
    private javax.swing.JTextField FillLCIName5;
    private javax.swing.JTextField FillLCIName6;
    private javax.swing.JTextField FillLCIName7;
    private javax.swing.JTextField FillLCIName8;
    private javax.swing.JTextField FillLCIName9;
    private javax.swing.JComboBox<String> FillLCIQuin;
    private javax.swing.JComboBox<String> FillLCIQuin1;
    private javax.swing.JComboBox<String> FillLCIQuin2;
    private javax.swing.JComboBox<String> FillLCIQuin3;
    private javax.swing.JComboBox<String> FillLCIQuin4;
    private javax.swing.JComboBox<String> FillLCIQuin5;
    private javax.swing.JComboBox<String> FillLCIQuin6;
    private javax.swing.JComboBox<String> FillLCIQuin7;
    private javax.swing.JComboBox<String> FillLCIQuin8;
    private javax.swing.JComboBox<String> FillLCIQuin9;
    private javax.swing.JComboBox<String> FillLSI;
    private javax.swing.JComboBox<String> FillLSI1;
    private javax.swing.JComboBox<String> FillLSI2;
    private javax.swing.JComboBox<String> FillLSI3;
    private javax.swing.JComboBox<String> FillLSI4;
    private javax.swing.JComboBox<String> FillLSI5;
    private javax.swing.JComboBox<String> FillLSI6;
    private javax.swing.JComboBox<String> FillLSI7;
    private javax.swing.JComboBox<String> FillLSI8;
    private javax.swing.JComboBox<String> FillLSI9;
    private javax.swing.JTextField FillLSIAm;
    private javax.swing.JTextField FillLSIAm1;
    private javax.swing.JTextField FillLSIAm2;
    private javax.swing.JTextField FillLSIAm3;
    private javax.swing.JTextField FillLSIAm4;
    private javax.swing.JTextField FillLSIAm5;
    private javax.swing.JTextField FillLSIAm6;
    private javax.swing.JTextField FillLSIAm7;
    private javax.swing.JTextField FillLSIAm8;
    private javax.swing.JTextField FillLSIAm9;
    private javax.swing.JTextField FillLSIAp;
    private javax.swing.JTextField FillLSIAp1;
    private javax.swing.JTextField FillLSIAp2;
    private javax.swing.JTextField FillLSIAp3;
    private javax.swing.JTextField FillLSIAp4;
    private javax.swing.JTextField FillLSIAp5;
    private javax.swing.JTextField FillLSIAp6;
    private javax.swing.JTextField FillLSIAp7;
    private javax.swing.JTextField FillLSIAp8;
    private javax.swing.JTextField FillLSIAp9;
    private javax.swing.JTextField FillLSIName;
    private javax.swing.JTextField FillLSIName1;
    private javax.swing.JTextField FillLSIName2;
    private javax.swing.JTextField FillLSIName3;
    private javax.swing.JTextField FillLSIName4;
    private javax.swing.JTextField FillLSIName5;
    private javax.swing.JTextField FillLSIName6;
    private javax.swing.JTextField FillLSIName7;
    private javax.swing.JTextField FillLSIName8;
    private javax.swing.JTextField FillLSIName9;
    private javax.swing.JComboBox<String> FillLSIQuin;
    private javax.swing.JComboBox<String> FillLSIQuin1;
    private javax.swing.JComboBox<String> FillLSIQuin2;
    private javax.swing.JComboBox<String> FillLSIQuin3;
    private javax.swing.JComboBox<String> FillLSIQuin4;
    private javax.swing.JComboBox<String> FillLSIQuin5;
    private javax.swing.JComboBox<String> FillLSIQuin6;
    private javax.swing.JComboBox<String> FillLSIQuin7;
    private javax.swing.JComboBox<String> FillLSIQuin8;
    private javax.swing.JComboBox<String> FillLSIQuin9;
    private javax.swing.JTextField LDA;
    private javax.swing.JTextField LDAAm;
    private javax.swing.JTextField LDAAp;
    private javax.swing.JTextField LDAName;
    private javax.swing.JComboBox<String> LDAQuin;
    private javax.swing.JTextField LDAZon;
    private javax.swing.JComboBox<String> LDAfil;
    private javax.swing.JTextField LDAfilam;
    private javax.swing.JTextField LDAfilap;
    private javax.swing.JTextField LDAfilname;
    private javax.swing.JLabel LabelFil;
    private javax.swing.JCheckBox MTL;
    private javax.swing.JCheckBox NYear;
    private javax.swing.JTable TableLDACI;
    private javax.swing.JTable TableLDACI1;
    private javax.swing.JTable TableLDACI2;
    private javax.swing.JTable TableLDACI3;
    private javax.swing.JTable TableLDACI4;
    private javax.swing.JTable TableLDACI5;
    private javax.swing.JTable TableLDACI6;
    private javax.swing.JTable TableLDACI7;
    private javax.swing.JTable TableLDACI8;
    private javax.swing.JTable TableLDACI9;
    private javax.swing.JTable TableLDASI;
    private javax.swing.JTable TableLDASI1;
    private javax.swing.JTable TableLDASI2;
    private javax.swing.JTable TableLDASI3;
    private javax.swing.JTable TableLDASI4;
    private javax.swing.JTable TableLDASI5;
    private javax.swing.JTable TableLDASI6;
    private javax.swing.JTable TableLDASI7;
    private javax.swing.JTable TableLDASI8;
    private javax.swing.JTable TableLDASI9;
    private javax.swing.JLabel ULDA;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane32;
    private javax.swing.JScrollPane jScrollPane33;
    private javax.swing.JScrollPane jScrollPane34;
    private javax.swing.JScrollPane jScrollPane35;
    private javax.swing.JScrollPane jScrollPane36;
    private javax.swing.JScrollPane jScrollPane37;
    private javax.swing.JScrollPane jScrollPane38;
    private javax.swing.JScrollPane jScrollPane39;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane40;
    private javax.swing.JScrollPane jScrollPane41;
    private javax.swing.JScrollPane jScrollPane42;
    private javax.swing.JScrollPane jScrollPane43;
    private javax.swing.JScrollPane jScrollPane44;
    private javax.swing.JScrollPane jScrollPane45;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}
