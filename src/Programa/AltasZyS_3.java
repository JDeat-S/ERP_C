/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Programa;

import Conexion.ConexionSQL;

import Filtros.FiltrosZonas;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JDeat
 */
public class AltasZyS_3 extends javax.swing.JFrame {

    ConexionSQL cc = new ConexionSQL();
    Connection con = cc.conexion();
    ButtonGroup Fil;

    /**
     * Creates new form AltasZyS_3
     */
    public AltasZyS_3() {
        initComponents();
        this.setLocationRelativeTo(null);
        IDS.setVisible(false);
        IDZ.setVisible(false);
        Zona.setVisible(false);
        NZS.setVisible(false);
        Filtros.setVisible(false);
        SabadoT.setEnabled(false);
        DomingoT.setEnabled(false);
        Fil = new ButtonGroup();
        Fil.add(FPNDS);
        Fil.add(FPNDZ);
        //El combobox jala datos de la base de datos
        FiltrosZonas zz = new FiltrosZonas();
        DefaultComboBoxModel modelzonas = new DefaultComboBoxModel(zz.mostrarzonas());
        FiltroZ.setModel(modelzonas);
        mostrarZonas();
        mostrarServicios();
        setIconImage(new ImageIcon(AltasZyS_3.class.getClassLoader().getResource("Imagenes/Icono.png")).getImage());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
//Modificar Servicio
    
    public void modS() {
        int id = Integer.parseInt(IDS.getText());
        String SQL = "UPDATE servicio SET `Nombre Zona` = ?, `Servicio` = ?, `idZona`= ? WHERE (`idServ` = ?)";

        try {
            PreparedStatement pst = con.prepareStatement(SQL);
            pst.setString(1, NZS.getText());
            pst.setString(2, NS.getText());
            pst.setString(3, Zona.getText());
            pst.setInt(4, id);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Servicio Modificado");
            mostrarServicios();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al modificar: " + e.getMessage());
        }
    }

//Modificar Zona
    public void modZ() {
        int id = Integer.parseInt(IDZ.getText());
        String SQL = "UPDATE zona SET `Zonas` = ? WHERE (`idZona` = ?)";

        try {
            PreparedStatement pst = con.prepareStatement(SQL);

            pst.setString(1, NZ.getText());
            pst.setInt(2, id);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Zona Modificada.");
            mostrarZonas();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al modificar: " + e.getMessage());
        }
    }

//Eliminar Servicio
    public void eliminarS() {

        try {

            int filaseleccionada = TServ.getSelectedRow();
            String sql = "delete from servicio where idServ=" + TServ.getValueAt(filaseleccionada, 0);
            java.sql.Statement st = con.createStatement();
            int n = st.executeUpdate(sql);
            if (n >= 0) {
                JOptionPane.showMessageDialog(null, "El servicio a sido eliminado.");
                mostrarServicios();
                clearServ();
            }
        } catch (HeadlessException | SQLException e) {

            JOptionPane.showMessageDialog(null, "Error al eliminar Servicio: " + e.getMessage());

        }

    }

//Eliminar Zona
    public void eliminarZ() {

        try {

            int filaseleccionada = TablaZona.getSelectedRow();
            String sql = "delete from zona where idZona=" + TablaZona.getValueAt(filaseleccionada, 0);
            java.sql.Statement st = con.createStatement();
            int n = st.executeUpdate(sql);
            if (n >= 0) {
                JOptionPane.showMessageDialog(null, "La Zona a sido eliminada.");
                mostrarZonas();
                clearzone();
            }
        } catch (HeadlessException | SQLException e) {

            JOptionPane.showMessageDialog(null, "Error al eliminar Zona: " + e.getMessage());

        }

    }

    public void AgregarZ() {

        String SQL = "INSERT INTO `confort`.`zona` (`Zonas`) VALUES (?)";

        try {
            PreparedStatement pst = con.prepareStatement(SQL);
            pst.setString(1, NZ.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Zona agregada.");
            mostrarZonas();
            clearzone();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al agregar: " + e.getMessage());
        }
    }
    
//Agregar Servicio
    public void AgregarS() {

        String SQL = "INSERT INTO `confort`.`servicio` (`idZona`, `Nombre Zona`, `Servicio`) VALUES (?, ?,?);";

        try {
            PreparedStatement pst = con.prepareStatement(SQL);
            pst.setString(1, Zona.getText());
            pst.setString(2, NZS.getText());
            pst.setString(3, NS.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Servicio agregado.");
            mostrarServicios();
            clearServ();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al agregar: " + e.getMessage());
        }
    }

    private void clearServ() {
        NS.setText("");
        IDS.setText("");
        Zona.setText("");
        NZS.setText("");
    }

    private void clearzone() {
        NZ.setText("");
        IDZ.setText("");
    }
    
//Mostrar Servicios
    private void mostrarServicios() {
        String[] titulos = {"ID Servicio", "Zona", "Nombre Zona", "Servicio" };

        String[] registros = new String[4];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };

        String sql = "select * from servicio ";

        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                registros[0] = rs.getString("idServ");
                registros[1] = rs.getString("idZona");
                registros[2] = rs.getString("Nombre Zona");
                registros[3] = rs.getString("Servicio");

                modelo.addRow(registros);
            }
            TServ.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos " + e.getMessage());
        }

    }

    private void mostrarZonas() {
        String[] titulos = {"ID de Zona", "Nombre de Zona"};

        String[] registros = new String[2];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };

        String sql = "select * from zona ";

        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                registros[0] = rs.getString("idZona");
                registros[1] = rs.getString("Zonas");

                modelo.addRow(registros);
            }
            TablaZona.setModel(modelo);
            ZSh.setModel(modelo);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos " + e.getMessage());
        }

    }
    
//Buscar Servicios por filtro Zonas
    private void buscarSFZ() {
        String[] titulos = {"ID Servicio", "Zona", "Nombre Zona", "Servicio"};
        String[] registros = new String[4];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };
        //String F1 = BS.getText();
        String F2 = FiltroZ.getSelectedItem().toString();
        
        String sql = "SELECT * FROM servicio WHERE `Nombre Zona` LIKE '%" + F2 + "%'";//OR `Servicio` LIKE '%" + F1 + " %'";
        //+ " ; este es para buscar por 2+ filtros
        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("idServ");
                registros[1] = rs.getString("idZona");
                registros[2] = rs.getString("Nombre Zona");
                registros[3] = rs.getString("Servicio");

                modelo.addRow(registros);
            }
            TServ.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos: " + e.getMessage());
        }

    }
//Buscar Servicios por filtro Nombre
    private void buscarSFN(String buscar) {
        String[] titulos = {"ID Servicio", "Zona", "Nombre Zona", "Servicio"};
        String[] registros = new String[4];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };
        
        String sql = "SELECT * FROM servicio WHERE `Servicio` LIKE '%" + buscar + "%'";
        //OR `Nombre Zona` LIKE '%" + F1 + " %'";este es para buscar por 2+ filtros
        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("idServ");
                registros[1] = rs.getString("idZona");
                registros[2] = rs.getString("Nombre Zona");
                registros[3] = rs.getString("Servicio");

                modelo.addRow(registros);
            }
            TServ.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos: " + e.getMessage());
        }

    }

    private void buscarZh(String buscar) {
        String[] titulos = {"ID zona", "Nombre Zona"};
        String[] registros = new String[2];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };

        String sql = "SELECT * FROM zona WHERE `Zonas` LIKE '%" + buscar + "%'";
        //+ " OR `Apellido_P_E` LIKE '%" + buscar + "%' OR `Apellido_M_E` LIKE '%" + buscar + "%'"; este es para buscar por 2+ filtros
        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("idZona");
                registros[1] = rs.getString("Zonas");

                modelo.addRow(registros);
            }
            ZSh.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos: " + e.getMessage());
        }

    }

    private void buscarZ(String buscar) {
        String[] titulos = {"ID zona", "Nombre Zona"};
        String[] registros = new String[2];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return columnas == 99;
            }
        };

        String sql = "SELECT * FROM zona WHERE `Zonas` LIKE '%" + buscar + "%'";
        //+ " OR `Apellido_P_E` LIKE '%" + buscar + "%' OR `Apellido_M_E` LIKE '%" + buscar + "%'"; este es para buscar por 2+ filtros
        try {

            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("idZona");
                registros[1] = rs.getString("Zonas");

                modelo.addRow(registros);
            }
            TablaZona.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos: " + e.getMessage());
        }

    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AgregarZ = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaZona = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        BZ = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        NZ = new javax.swing.JTextArea();
        IDZ = new javax.swing.JTextField();
        EliminarZ = new javax.swing.JButton();
        ModZ = new javax.swing.JButton();
        Volver1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ZSh = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        IDS = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BZS = new javax.swing.JTextField();
        AgrergarS = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        NS = new javax.swing.JTextArea();
        ModS = new javax.swing.JButton();
        Zona = new javax.swing.JTextField();
        Volver = new javax.swing.JButton();
        NZS = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        TServ = new javax.swing.JTable();
        Volver2 = new javax.swing.JButton();
        FPNDS = new javax.swing.JRadioButton();
        FPNDZ = new javax.swing.JRadioButton();
        Filtros = new javax.swing.JPanel();
        BStext = new javax.swing.JLabel();
        BS = new javax.swing.JTextField();
        EliminarS = new javax.swing.JButton();
        BZtext = new javax.swing.JLabel();
        FiltroZ = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AgregarDDS = new javax.swing.JButton();
        ModificarDDS = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        Allday = new javax.swing.JRadioButton();
        Otro = new javax.swing.JRadioButton();
        SabadoT = new javax.swing.JTextField();
        DomingoT = new javax.swing.JTextField();
        Otrotxt = new javax.swing.JTextField();
        HorarioSYD = new javax.swing.JLabel();
        Sab = new javax.swing.JRadioButton();
        Dom = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alta de Zonas y Servicios");
        setResizable(false);

        jLabel1.setText("Nombre de la zona:");

        AgregarZ.setText("Agregar Zona");
        AgregarZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarZActionPerformed(evt);
            }
        });

        TablaZona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaZona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaZonaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TablaZona);

        jLabel2.setText("Buscar Zona:");

        BZ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BZKeyReleased(evt);
            }
        });

        NZ.setColumns(20);
        NZ.setLineWrap(true);
        NZ.setRows(5);
        jScrollPane5.setViewportView(NZ);

        EliminarZ.setText("Eliminar");
        EliminarZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarZActionPerformed(evt);
            }
        });

        ModZ.setText("Modificar");
        ModZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModZActionPerformed(evt);
            }
        });

        Volver1.setText("<-- Volver");
        Volver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Volver1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(IDZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(AgregarZ)
                        .addGap(30, 30, 30)
                        .addComponent(ModZ)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BZ, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarZ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Volver1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(BZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(EliminarZ)
                    .addComponent(Volver1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(IDZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ModZ)
                                    .addComponent(AgregarZ))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        jTabbedPane1.addTab("Alta de Zonas", jScrollPane1);

        ZSh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ZSh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZShMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ZSh);

        jLabel3.setText("Nombre del servicio:");

        jLabel4.setText("Buscar Zona:");

        BZS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BZSKeyReleased(evt);
            }
        });

        AgrergarS.setText("Agregar Servicio");
        AgrergarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgrergarSActionPerformed(evt);
            }
        });

        NS.setColumns(20);
        NS.setRows(5);
        jScrollPane6.setViewportView(NS);

        ModS.setText("Modificar");
        ModS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModSActionPerformed(evt);
            }
        });

        Volver.setText("<-- Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Zona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NZS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(AgrergarS)
                                .addGap(18, 18, 18)
                                .addComponent(ModS)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BZS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Volver)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(BZS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Volver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(Zona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgrergarS)
                            .addComponent(ModS))
                        .addGap(27, 27, 27)
                        .addComponent(NZS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel2);

        jTabbedPane1.addTab("Alta de Servicios", jScrollPane2);

        TServ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TServ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TServMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(TServ);

        Volver2.setText("<-- Volver");
        Volver2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Volver2ActionPerformed(evt);
            }
        });

        FPNDS.setText("Filtrar por nombre de servicio");
        FPNDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FPNDSActionPerformed(evt);
            }
        });

        FPNDZ.setText("Filtrar por Zonas");
        FPNDZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FPNDZActionPerformed(evt);
            }
        });

        BStext.setText("Buscar Servicio:");

        BS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BSKeyReleased(evt);
            }
        });

        EliminarS.setText("Eliminar");
        EliminarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarSActionPerformed(evt);
            }
        });

        BZtext.setText("Filtrar por Zonas:");

        FiltroZ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        FiltroZ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                FiltroZItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout FiltrosLayout = new javax.swing.GroupLayout(Filtros);
        Filtros.setLayout(FiltrosLayout);
        FiltrosLayout.setHorizontalGroup(
            FiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FiltrosLayout.createSequentialGroup()
                .addComponent(BStext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BS, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EliminarS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BZtext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FiltroZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        FiltrosLayout.setVerticalGroup(
            FiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FiltrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BStext)
                    .addComponent(BS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EliminarS)
                    .addComponent(BZtext)
                    .addComponent(FiltroZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(FPNDS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FPNDZ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Volver2)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Volver2)
                        .addComponent(FPNDS)
                        .addComponent(FPNDZ))
                    .addComponent(Filtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane8.setViewportView(jPanel3);

        jTabbedPane1.addTab("Tabla servicios", jScrollPane8);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Zona:");

        jLabel6.setText("Servicio:");

        jLabel7.setText("Supervisor:");

        jLabel8.setText("Horario");

        jLabel9.setText("Abre");

        AgregarDDS.setText("Agregar");
        AgregarDDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDDSActionPerformed(evt);
            }
        });

        ModificarDDS.setText("Modificar");
        ModificarDDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarDDSActionPerformed(evt);
            }
        });

        jTextField2.setText("L a V");

        jLabel10.setText("Cierra");

        Allday.setText("24 Hrs");

        Otro.setText("Otro");

        HorarioSYD.setText("Horario:");

        Sab.setText("Sabado");
        Sab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SabActionPerformed(evt);
            }
        });

        Dom.setText("Domingo");
        Dom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(AgregarDDS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ModificarDDS))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HorarioSYD, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SabadoT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Sab))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Dom)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Allday)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Otro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Otrotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(DomingoT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))))
                .addContainerGap(458, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(Allday)
                    .addComponent(Otro)
                    .addComponent(Otrotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sab)
                    .addComponent(Dom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SabadoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DomingoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HorarioSYD))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarDDS)
                    .addComponent(ModificarDDS))
                .addContainerGap(475, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel4);

        jTabbedPane1.addTab("Agregar Detalles de Servicio", jScrollPane7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarZActionPerformed
        // TODO add your handling code here:
        AgregarZ();
        FiltrosZonas zz = new FiltrosZonas();
        DefaultComboBoxModel modelzonas = new DefaultComboBoxModel(zz.mostrarzonas());
        FiltroZ.setModel(modelzonas);
    }//GEN-LAST:event_AgregarZActionPerformed

    private void BZKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BZKeyReleased
        // TODO add your handling code here:
        buscarZ(BZ.getText());
    }//GEN-LAST:event_BZKeyReleased

    private void BZSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BZSKeyReleased
        // TODO add your handling code here:
        buscarZh(BZS.getText());
    }//GEN-LAST:event_BZSKeyReleased

    private void ModZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModZActionPerformed
        // TODO add your handling code here:
        modZ();
        FiltrosZonas zz = new FiltrosZonas();
        DefaultComboBoxModel modelzonas = new DefaultComboBoxModel(zz.mostrarzonas());
        FiltroZ.setModel(modelzonas);
    }//GEN-LAST:event_ModZActionPerformed

    private void EliminarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarSActionPerformed
        // TODO add your handling code here:
        eliminarS();
    }//GEN-LAST:event_EliminarSActionPerformed

    private void EliminarZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarZActionPerformed
        // TODO add your handling code here:
        eliminarZ();
    }//GEN-LAST:event_EliminarZActionPerformed

    private void BSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BSKeyReleased
        // TODO add your handling code here:
        buscarSFN(BS.getText());
    }//GEN-LAST:event_BSKeyReleased

    private void TablaZonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaZonaMouseClicked
        // TODO add your handling code here:
        int seleccionar = TablaZona.getSelectedRow();
        IDZ.setText(String.valueOf(TablaZona.getValueAt(seleccionar, 0)));
        NZ.setText(String.valueOf(TablaZona.getValueAt(seleccionar, 1)));

    }//GEN-LAST:event_TablaZonaMouseClicked

    private void ZShMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZShMouseClicked
        // TODO add your handling code here:
        int seleccionar = ZSh.getSelectedRow();
        Zona.setText(String.valueOf(ZSh.getValueAt(seleccionar, 0)));
        NZS.setText(String.valueOf(ZSh.getValueAt(seleccionar, 1))); 

    }//GEN-LAST:event_ZShMouseClicked

    private void TServMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TServMouseClicked
        // TODO add your handling code here:
        int seleccionar = TServ.getSelectedRow();
        IDS.setText(String.valueOf(TServ.getValueAt(seleccionar, 0)));
        Zona.setText(String.valueOf(TServ.getValueAt(seleccionar, 1)));
        NS.setText(String.valueOf(TServ.getValueAt(seleccionar, 2)));

    }//GEN-LAST:event_TServMouseClicked

    private void AgrergarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgrergarSActionPerformed
        // TODO add your handling code here:
        AgregarS();
    }//GEN-LAST:event_AgrergarSActionPerformed

    private void ModSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModSActionPerformed
        // TODO add your handling code here:
        modS();
    }//GEN-LAST:event_ModSActionPerformed

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "¿Seguro que quieres a la ventana de administrador?");
        if (i == 0) {
            Administradores_3 regr = new Administradores_3();
            regr.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_VolverActionPerformed

    private void Volver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Volver1ActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "¿Seguro que quieres a la ventana de administrador?");
        if (i == 0) {
            Administradores_3 regr = new Administradores_3();
            regr.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_Volver1ActionPerformed

    private void Volver2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Volver2ActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "¿Seguro que quieres a la ventana de administrador?");
        if (i == 0) {
            Administradores_3 regr = new Administradores_3();
            regr.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_Volver2ActionPerformed

    private void FiltroZItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FiltroZItemStateChanged
        // TODO add your handling code here:
        buscarSFZ();
    }//GEN-LAST:event_FiltroZItemStateChanged

    private void FPNDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FPNDSActionPerformed
        // TODO add your handling code here:
        Filtros.setVisible(true);
        BZtext.setVisible(false);
        FiltroZ.setVisible(false);
        FiltroZ.setSelectedIndex(0);
        BS.setVisible(true);
        BS.setText("");
        BStext.setVisible(true);
    }//GEN-LAST:event_FPNDSActionPerformed

    private void FPNDZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FPNDZActionPerformed
        // TODO add your handling code here:
        Filtros.setVisible(true);
        BZtext.setVisible(true);
        FiltroZ.setVisible(true);
        FiltroZ.setSelectedIndex(0);
        BS.setVisible(false);
        BS.setText("");
        BStext.setVisible(false);
    }//GEN-LAST:event_FPNDZActionPerformed

    private void AgregarDDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDDSActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AgregarDDSActionPerformed

    private void ModificarDDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarDDSActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ModificarDDSActionPerformed

    private void SabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SabActionPerformed
        // TODO add your handling code here:
        if(Sab.isSelected() == true){
            SabadoT.setEnabled(true);
        }
        else if
        
            (Sab.isSelected() == false){
            SabadoT.setEnabled(false);
        }
    }//GEN-LAST:event_SabActionPerformed

    private void DomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DomActionPerformed
        // TODO add your handling code here:
        if(Dom.isSelected() == true){
            DomingoT.setEnabled(true);
        }
        else if
        
            (Dom.isSelected() == false){
            DomingoT.setEnabled(false);
        }
    }//GEN-LAST:event_DomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltasZyS_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltasZyS_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltasZyS_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltasZyS_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltasZyS_3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarDDS;
    private javax.swing.JButton AgregarZ;
    private javax.swing.JButton AgrergarS;
    private javax.swing.JRadioButton Allday;
    private javax.swing.JTextField BS;
    private javax.swing.JLabel BStext;
    private javax.swing.JTextField BZ;
    private javax.swing.JTextField BZS;
    private javax.swing.JLabel BZtext;
    private javax.swing.JRadioButton Dom;
    private javax.swing.JTextField DomingoT;
    private javax.swing.JButton EliminarS;
    private javax.swing.JButton EliminarZ;
    private javax.swing.JRadioButton FPNDS;
    private javax.swing.JRadioButton FPNDZ;
    private javax.swing.JComboBox<String> FiltroZ;
    private javax.swing.JPanel Filtros;
    private javax.swing.JLabel HorarioSYD;
    private javax.swing.JTextField IDS;
    private javax.swing.JTextField IDZ;
    private javax.swing.JButton ModS;
    private javax.swing.JButton ModZ;
    private javax.swing.JButton ModificarDDS;
    private javax.swing.JTextArea NS;
    private javax.swing.JTextArea NZ;
    private javax.swing.JTextField NZS;
    private javax.swing.JRadioButton Otro;
    private javax.swing.JTextField Otrotxt;
    private javax.swing.JRadioButton Sab;
    private javax.swing.JTextField SabadoT;
    private javax.swing.JTable TServ;
    private javax.swing.JTable TablaZona;
    private javax.swing.JButton Volver;
    private javax.swing.JButton Volver1;
    private javax.swing.JButton Volver2;
    private javax.swing.JTable ZSh;
    private javax.swing.JTextField Zona;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
